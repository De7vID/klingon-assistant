diff --git a/res/menu/options_menu.xml b/res/menu/options_menu.xml
index 4991cf3..06f2f11 100644
--- a/res/menu/options_menu.xml
+++ b/res/menu/options_menu.xml
@@ -17,18 +17,11 @@
 -->
 <!-- Options Menu for SearchableActivity and EntryActivity.
  -->
+<!-- BACKPORT: No action view. -->
 <menu xmlns:android="http://schemas.android.com/apk/res/android">
     <item android:id="@+id/search"
           android:title="@string/menu_search"
-          android:icon="@drawable/ic_menu_search"
-          android:showAsAction="ifRoom|collapseActionView"
-          android:actionViewClass="android.widget.SearchView" />
-
-    <item android:id="@+id/share"
-          android:title="@string/menu_share"
-          android:showAsAction="always"
-          android:actionProviderClass="com.actionbarsherlock.widget.ShareActionProvider"
-          android:visible="false" />
+          android:icon="@drawable/ic_menu_search" />
 
     <item android:id="@+id/about"
         android:title="@string/menu_about" />
diff --git a/res/menu/options_menu_tlh.xml b/res/menu/options_menu_tlh.xml
index cc07e8d..a9f2a83 100644
--- a/res/menu/options_menu_tlh.xml
+++ b/res/menu/options_menu_tlh.xml
@@ -17,18 +17,11 @@
 -->
 <!-- Options Menu for SearchableActivity and EntryActivity.
  -->
+<!-- BACKPORT: No action view. -->
 <menu xmlns:android="http://schemas.android.com/apk/res/android">
     <item android:id="@+id/search"
           android:title="@string/menu_search_tlh"
-          android:icon="@drawable/ic_menu_search"
-          android:showAsAction="ifRoom|collapseActionView"
-          android:actionViewClass="android.widget.SearchView" />
-
-    <item android:id="@+id/share"
-          android:title="@string/menu_share_tlh"
-          android:showAsAction="always"
-          android:actionProviderClass="com.actionbarsherlock.widget.ShareActionProvider"
-          android:visible="false" />
+          android:icon="@drawable/ic_menu_search" />
 
     <item android:id="@+id/about"
         android:title="@string/menu_about_tlh" />
diff --git a/src/org/tlhInganHol/android/klingonassistant/EntryActivity.java b/src/org/tlhInganHol/android/klingonassistant/EntryActivity.java
index b1cef5f..b9fb2c5 100644
--- a/src/org/tlhInganHol/android/klingonassistant/EntryActivity.java
+++ b/src/org/tlhInganHol/android/klingonassistant/EntryActivity.java
@@ -18,15 +18,14 @@ package org.tlhInganHol.android.klingonassistant;
 
 import java.util.regex.Matcher;
 
+import android.app.Activity;
 import android.app.SearchManager;
 import android.content.ComponentName;
-import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Resources;
 import android.database.Cursor;
 import android.net.Uri;
-import android.os.Build;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.text.Html;
@@ -39,19 +38,16 @@ import android.text.style.StyleSpan;
 import android.text.style.SuperscriptSpan;
 import android.text.style.TypefaceSpan;
 import android.text.style.URLSpan;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
 import android.view.View;
-import android.widget.SearchView;
-import com.actionbarsherlock.app.ActionBar;
-import com.actionbarsherlock.app.SherlockActivity;
-import com.actionbarsherlock.view.Menu;
-import com.actionbarsherlock.view.MenuInflater;
-import com.actionbarsherlock.view.MenuItem;
-import com.actionbarsherlock.widget.ShareActionProvider;
+import android.widget.TextView;
 
 /**
  * Displays an entry and its definition.
  */
-public class EntryActivity extends SherlockActivity {
+public class EntryActivity extends Activity {
     // private static final String TAG = "EntryActivity";
 
     // This must uniquely identify the {boQwI'} entry.
@@ -78,7 +74,6 @@ public class EntryActivity extends SherlockActivity {
     private static final String QUERY_FOR_BEGINNERS_CONVERSATION = "*:sen:bc";
     private static final String QUERY_FOR_JOKES = "*:sen:joke";
 
-    private Intent shareEntryIntent = null;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -86,11 +81,10 @@ public class EntryActivity extends SherlockActivity {
         setContentView(R.layout.entry);
         Resources resources = getResources();
 
-        ActionBar actionBar = getSupportActionBar();
-        actionBar.setDisplayHomeAsUpEnabled(true);
+        // BACKPORT: No Action Bar.
 
-        JellyBeanSpanFixTextView entryTitle = (JellyBeanSpanFixTextView) findViewById(R.id.entry);
-        JellyBeanSpanFixTextView entryText = (JellyBeanSpanFixTextView) findViewById(R.id.definition);
+        TextView entryTitle = (TextView) findViewById(R.id.entry);
+        TextView entryText = (TextView) findViewById(R.id.definition);
 
         // TODO: Save and restore bundle state to preserve links.
 
@@ -130,8 +124,7 @@ public class EntryActivity extends SherlockActivity {
             expandedDefinition += germanDefinitionHeader + definition_DE;
         }
 
-        // Set the share intent.
-        setShareEntryIntent(entry);
+        // BACKPORT: No share intent.
 
         // Show the basic notes.
         String notes = entry.getNotes();
@@ -368,7 +361,7 @@ public class EntryActivity extends SherlockActivity {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
-        MenuInflater inflater = getSupportMenuInflater();
+        MenuInflater inflater = getMenuInflater();
         SharedPreferences sharedPrefs =
             PreferenceManager.getDefaultSharedPreferences(getBaseContext());
         if (sharedPrefs.getBoolean(Preferences.KEY_KLINGON_UI_CHECKBOX_PREFERENCE, /* default */ false)) {
@@ -376,56 +369,17 @@ public class EntryActivity extends SherlockActivity {
         } else {
             inflater.inflate(R.menu.options_menu, menu);
         }
-        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB){
-            SearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);
-            SearchView searchView = (SearchView) menu.findItem(R.id.search).getActionView();
-            searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));
-            searchView.setIconifiedByDefault(false);
-        }
-        MenuItem shareButton = (MenuItem) menu.findItem(R.id.share);
-        ShareActionProvider shareActionProvider = (ShareActionProvider) shareButton.getActionProvider();
-
-        if (shareActionProvider != null && shareEntryIntent != null) {
-            // Enable "Share" button.
-            shareActionProvider.setShareIntent(shareEntryIntent);
-            shareButton.setVisible(true);
-        }
+        // BACKPORT: No search view or share button.
         return true;
     }
 
-    // Set the share intent for this entry.
-    private void setShareEntryIntent(KlingonContentProvider.Entry entry) {
-        if (entry.isAlternativeSpelling()) {
-            return;
-        }
-
-        SharedPreferences sharedPrefs =
-            PreferenceManager.getDefaultSharedPreferences(getBaseContext());
-        shareEntryIntent = new Intent(Intent.ACTION_SEND);
-        if (sharedPrefs.getBoolean(Preferences.KEY_KLINGON_UI_CHECKBOX_PREFERENCE, /* default */ false)) {
-            shareEntryIntent.putExtra(Intent.EXTRA_TITLE, getResources().getString(R.string.share_popup_title_tlh));
-        } else {
-            shareEntryIntent.putExtra(Intent.EXTRA_TITLE, getResources().getString(R.string.share_popup_title));
-        }
-
-        shareEntryIntent.setType("text/plain");
-        String subject = "{" + entry.getFormattedEntryName(/* isHtml */ false) + "}";
-        shareEntryIntent.putExtra(Intent.EXTRA_SUBJECT, subject);
-        String snippet = subject + "\n" + entry.getFormattedDefinition(/* isHtml */ false);
-        shareEntryIntent.putExtra(Intent.EXTRA_TEXT, snippet + "\n\n" + getResources().getString(R.string.shared_from));
-    }
-
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.search:
                 onSearchRequested();
                 return true;
-            case android.R.id.home:
-                Intent intent = new Intent(this, KlingonAssistant.class);
-                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
-                startActivity(intent);
-                return true;
+            // BACKPORT: No handling of android.R.id.home.
             case R.id.about:
                 // Show "About" screen.
                 displayHelp(QUERY_FOR_ABOUT);
diff --git a/src/org/tlhInganHol/android/klingonassistant/KlingonAssistant.java b/src/org/tlhInganHol/android/klingonassistant/KlingonAssistant.java
index 8026883..83ee46b 100644
--- a/src/org/tlhInganHol/android/klingonassistant/KlingonAssistant.java
+++ b/src/org/tlhInganHol/android/klingonassistant/KlingonAssistant.java
@@ -16,6 +16,7 @@
 
 package org.tlhInganHol.android.klingonassistant;
 
+import android.app.Activity;
 import android.app.SearchManager;
 import android.content.ComponentName;
 import android.content.Context;
@@ -24,32 +25,28 @@ import android.content.SharedPreferences;
 import android.database.Cursor;
 import android.graphics.Typeface;
 import android.net.Uri;
-import android.os.Build;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.text.Html;
 import android.text.TextUtils;
 import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
 import android.widget.BaseAdapter;
 import android.widget.ListView;
-import android.widget.SearchView;
 import android.widget.TextView;
 import android.widget.TwoLineListItem;
-import com.actionbarsherlock.app.ActionBar;
-import com.actionbarsherlock.app.SherlockActivity;
-import com.actionbarsherlock.view.Menu;
-import com.actionbarsherlock.view.MenuInflater;
-import com.actionbarsherlock.view.MenuItem;
 
 /**
  * The main activity for the dictionary.
  * Displays search results triggered by the search dialog and handles
  * actions from search suggestions.
  */
-public class KlingonAssistant extends SherlockActivity {
+public class KlingonAssistant extends Activity {
     // private static final String TAG = "KlingonAssistant";
 
     // Preference key for whether to show help.
@@ -92,8 +89,7 @@ public class KlingonAssistant extends SherlockActivity {
             setContentView(R.layout.main);
         }
 
-        ActionBar actionBar = getSupportActionBar();
-        actionBar.setDisplayHomeAsUpEnabled(true);
+        // BACKPORT: No action bar.
 
         mTextView = (TextView) findViewById(R.id.text);
         mListView = (ListView) findViewById(R.id.list);
@@ -276,7 +272,7 @@ public class KlingonAssistant extends SherlockActivity {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
-        MenuInflater inflater = getSupportMenuInflater();
+        MenuInflater inflater = getMenuInflater();
         SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getBaseContext());
         if (sharedPrefs.getBoolean(Preferences.KEY_KLINGON_UI_CHECKBOX_PREFERENCE, /* default */ false)) {
             inflater.inflate(R.menu.options_menu_tlh, menu);
@@ -284,12 +280,7 @@ public class KlingonAssistant extends SherlockActivity {
             inflater.inflate(R.menu.options_menu, menu);
         }
 
-        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB){
-            SearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);
-            SearchView searchView = (SearchView) menu.findItem(R.id.search).getActionView();
-            searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));
-            searchView.setIconifiedByDefault(false);
-        }
+        // BACKPORT: No search view.
 
         return true;
     }
@@ -318,9 +309,7 @@ public class KlingonAssistant extends SherlockActivity {
             case R.id.search:
                 onSearchRequested();
                 return true;
-            case android.R.id.home:
-                finish();
-                return true;
+            // BACKPORT: No handling of android.R.id.home.
             case R.id.about:
                 // Show "About" screen.
                 showResults(QUERY_FOR_ABOUT);
diff --git a/src/org/tlhInganHol/android/klingonassistant/Preferences.java b/src/org/tlhInganHol/android/klingonassistant/Preferences.java
index 1c1216b..9f6325b 100644
--- a/src/org/tlhInganHol/android/klingonassistant/Preferences.java
+++ b/src/org/tlhInganHol/android/klingonassistant/Preferences.java
@@ -25,14 +25,12 @@ import android.content.SharedPreferences;
 import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
 import android.os.Build;
 import android.os.Bundle;
+import android.preference.PreferenceActivity;
 import android.os.Process;
 import android.preference.CheckBoxPreference;
+import android.view.MenuItem;
 
-import com.actionbarsherlock.app.ActionBar;
-import com.actionbarsherlock.app.SherlockPreferenceActivity;
-import com.actionbarsherlock.view.MenuItem;
-
-public class Preferences extends SherlockPreferenceActivity implements OnSharedPreferenceChangeListener {
+public class Preferences extends PreferenceActivity implements OnSharedPreferenceChangeListener {
 
     // Language preferences.
     public static final String KEY_KLINGON_UI_CHECKBOX_PREFERENCE = "klingon_ui_checkbox_preference";
@@ -57,16 +55,13 @@ public class Preferences extends SherlockPreferenceActivity implements OnSharedP
         // Load the preferences from an XML resource.
         addPreferencesFromResource(R.xml.preferences);
 
-        ActionBar actionBar = getSupportActionBar();
-        actionBar.setDisplayHomeAsUpEnabled(true);
+        // BACKPORT: No Action Bar.
     }
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
-            case android.R.id.home:
-                finish();
-                return true;
+            // BACKPORT: No handling of android.R.id.home.
             default:
                 return super.onOptionsItemSelected(item);
         }
