/*
 * Copyright (C) 2014 De'vID jonpIn (David Yonge-Mallo)
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package org.tlhInganHol.android.klingonttsengine;

import android.annotation.TargetApi;
import android.content.Context;
import android.media.AudioFormat;
import android.media.MediaPlayer;
import android.speech.tts.SynthesisCallback;
import android.speech.tts.SynthesisRequest;
import android.speech.tts.TextToSpeech;
import android.speech.tts.TextToSpeechService;
import android.speech.tts.Voice;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;

/**
 * A text to speech engine that generates Klingon speech.
 * The engine supports two different Klingon voices.
 *
 * It exercises all aspects of the Text to speech engine API
 * {@link android.speech.tts.TextToSpeechService}.
 */
public class KlingonSpeakTtsService extends TextToSpeechService implements android.media.MediaPlayer.OnCompletionListener {
    private static final String TAG = "KlingonSpeakTtsService";

    // The media player object used to play the sounds.
    private MediaPlayer mMediaPlayer = null;

    private volatile String[] mCurrentLanguage = null;
    private volatile boolean mStopRequested = false;

    // This map contains the front half of full syllables.
    private static final Map<String, Integer> FRONT_HALF_SYLLABLE_TO_AUDIO_MAP;
    static {
        Map<String, Integer> initMap = new HashMap<String, Integer>();

        // THIS IS AUTOGENERATED CODE. DO NOT EDIT BELOW THIS LINE.
        // BEGIN: FRONT_HALF_SYLLABLE_TO_AUDIO_MAP
        initMap.put("ba-", R.raw.audio_ba0);
        initMap.put("be-", R.raw.audio_be0);
        initMap.put("bI-", R.raw.audio_bi0);
        initMap.put("bo-", R.raw.audio_bo0);
        initMap.put("Ca-", R.raw.audio_ca0);
        initMap.put("Ce-", R.raw.audio_ce0);
        initMap.put("CI-", R.raw.audio_ci0);
        initMap.put("Co-", R.raw.audio_co0);
        initMap.put("Cu-", R.raw.audio_cu0);
        initMap.put("Da-", R.raw.audio_da0);
        initMap.put("De-", R.raw.audio_de0);
        initMap.put("DI-", R.raw.audio_di0);
        initMap.put("Do-", R.raw.audio_do0);
        initMap.put("Du-", R.raw.audio_du0);
        initMap.put("Fa-", R.raw.audio_fa0);
        initMap.put("Ga-", R.raw.audio_ga0);
        initMap.put("Ge-", R.raw.audio_ge0);
        initMap.put("GI-", R.raw.audio_gi0);
        initMap.put("Go-", R.raw.audio_go0);
        initMap.put("Gu-", R.raw.audio_gu0);
        initMap.put("Ha-", R.raw.audio_ha0);
        initMap.put("He-", R.raw.audio_he0);
        initMap.put("HI-", R.raw.audio_hi0);
        initMap.put("Ho-", R.raw.audio_ho0);
        initMap.put("Hu-", R.raw.audio_hu0);
        initMap.put("jI-", R.raw.audio_ji0);
        initMap.put("jo-", R.raw.audio_jo0);
        initMap.put("ju-", R.raw.audio_ju0);
        initMap.put("Qo-", R.raw.audio_ko0);
        initMap.put("Qu-", R.raw.audio_ku0);
        initMap.put("la-", R.raw.audio_la0);
        initMap.put("le-", R.raw.audio_le0);
        initMap.put("lI-", R.raw.audio_li0);
        initMap.put("lo-", R.raw.audio_lo0);
        initMap.put("lu-", R.raw.audio_lu0);
        initMap.put("ma-", R.raw.audio_ma0);
        initMap.put("me-", R.raw.audio_me0);
        initMap.put("mI-", R.raw.audio_mi0);
        initMap.put("mo-", R.raw.audio_mo0);
        initMap.put("mu-", R.raw.audio_mu0);
        initMap.put("na-", R.raw.audio_na0);
        initMap.put("ne-", R.raw.audio_ne0);
        initMap.put("nI-", R.raw.audio_ni0);
        initMap.put("no-", R.raw.audio_no0);
        initMap.put("nu-", R.raw.audio_nu0);
        initMap.put("pa-", R.raw.audio_pa0);
        initMap.put("pe-", R.raw.audio_pe0);
        initMap.put("pI-", R.raw.audio_pi0);
        initMap.put("po-", R.raw.audio_po0);
        initMap.put("qa-", R.raw.audio_qa0);
        initMap.put("qe-", R.raw.audio_qe0);
        initMap.put("qI-", R.raw.audio_qi0);
        initMap.put("qo-", R.raw.audio_qo0);
        initMap.put("qu-", R.raw.audio_qu0);
        initMap.put("ra-", R.raw.audio_ra0);
        initMap.put("re-", R.raw.audio_re0);
        initMap.put("rI-", R.raw.audio_ri0);
        initMap.put("ro-", R.raw.audio_ro0);
        initMap.put("ru-", R.raw.audio_ru0);
        initMap.put("Sa-", R.raw.audio_sa0);
        initMap.put("Se-", R.raw.audio_se0);
        initMap.put("SI-", R.raw.audio_si0);
        initMap.put("So-", R.raw.audio_so0);
        initMap.put("Su-", R.raw.audio_su0);
        initMap.put("ta-", R.raw.audio_ta0);
        initMap.put("te-", R.raw.audio_te0);
        initMap.put("tI-", R.raw.audio_ti0);
        initMap.put("to-", R.raw.audio_to0);
        initMap.put("tu-", R.raw.audio_tu0);
        initMap.put("va-", R.raw.audio_va0);
        initMap.put("ve-", R.raw.audio_ve0);
        initMap.put("vI-", R.raw.audio_vi0);
        initMap.put("wa-", R.raw.audio_wa0);
        initMap.put("wI-", R.raw.audio_wi0);
        initMap.put("wo-", R.raw.audio_wo0);
        initMap.put("xa-", R.raw.audio_xa0);
        initMap.put("xI-", R.raw.audio_xi0);
        initMap.put("ya-", R.raw.audio_ya0);
        initMap.put("ye-", R.raw.audio_ye0);
        initMap.put("yI-", R.raw.audio_yi0);
        initMap.put("yo-", R.raw.audio_yo0);
        initMap.put("yu-", R.raw.audio_yu0);
        initMap.put("za-", R.raw.audio_za0);
        initMap.put("ze-", R.raw.audio_ze0);
        initMap.put("zI-", R.raw.audio_zi0);
        initMap.put("zo-", R.raw.audio_zo0);
        initMap.put("zu-", R.raw.audio_zu0);
        // END: FRONT_HALF_SYLLABLE_TO_AUDIO_MAP
        // THIS IS AUTOGENERATED CODE. DO NOT EDIT ABOVE THIS LINE.

        FRONT_HALF_SYLLABLE_TO_AUDIO_MAP = Collections.unmodifiableMap(initMap);
    }

    // This map contains short syllables, i.e., those of the form CV.
    // Unlike for the corresponding front half of a full syllable, the audio for a short syllable
    // doesn't end abruptly. For example, "Da-" (a front half syllable) is the prefix for "you-it",
    // whereas "Da" (a short syllable) is the verb for "behave as".
    private static final Map<String, Integer> SHORT_SYLLABLE_TO_AUDIO_MAP;
    static {
        Map<String, Integer> initMap = new HashMap<String, Integer>();
        // bo, cha, Da, DI, Do, gho, ghu, He, Hu, ja, je, jo, lu, po, QI, ra, ro, So, ta, tI, va, ya, yu, 'a, 'o

        // THIS IS AUTOGENERATED CODE. DO NOT EDIT BELOW THIS LINE.
        // BEGIN: SHORT_SYLLABLE_TO_AUDIO_MAP
        initMap.put("bo", R.raw.audio_bo);
        initMap.put("Ca", R.raw.audio_ca);
        initMap.put("Da", R.raw.audio_da);
        initMap.put("DI", R.raw.audio_di);
        initMap.put("Do", R.raw.audio_do);
        initMap.put("Go", R.raw.audio_go);
        initMap.put("Gu", R.raw.audio_gu);
        initMap.put("He", R.raw.audio_he);
        initMap.put("Hu", R.raw.audio_hu);
        initMap.put("ja", R.raw.audio_ja);
        initMap.put("je", R.raw.audio_je);
        initMap.put("jo", R.raw.audio_jo);
        initMap.put("QI", R.raw.audio_ki);
        initMap.put("Qu", R.raw.audio_ku);
        initMap.put("lu", R.raw.audio_lu);
        initMap.put("ma", R.raw.audio_ma);
        initMap.put("oy", R.raw.audio_oy);
        initMap.put("po", R.raw.audio_po);
        initMap.put("qo", R.raw.audio_qo);
        initMap.put("ra", R.raw.audio_ra);
        initMap.put("ro", R.raw.audio_ro);
        initMap.put("So", R.raw.audio_so);
        initMap.put("ta", R.raw.audio_ta);
        initMap.put("tI", R.raw.audio_ti);
        initMap.put("va", R.raw.audio_va);
        initMap.put("ya", R.raw.audio_ya);
        initMap.put("yu", R.raw.audio_yu);
        initMap.put("za", R.raw.audio_za);
        initMap.put("zo", R.raw.audio_zo);
        // END: SHORT_SYLLABLE_TO_AUDIO_MAP
        // THIS IS AUTOGENERATED CODE. DO NOT EDIT ABOVE THIS LINE.

        SHORT_SYLLABLE_TO_AUDIO_MAP = Collections.unmodifiableMap(initMap);
    }

    // This map contains the back half of full syllables. It is preferable to avoid constructing
    // syllables by concatenating the front and back parts, as there is a noticeable discontinuity
    // in the audio if the vowel sound is not perfectly matched.
    private static final Map<String, Integer> BACK_HALF_SYLLABLE_TO_AUDIO_MAP;
    static {
        Map<String, Integer> initMap = new HashMap<String, Integer>();
        // -a, -e, -I, -o, -u

        BACK_HALF_SYLLABLE_TO_AUDIO_MAP = Collections.unmodifiableMap(initMap);
    }

    // This map contains full syllables, i.e., those of the form CVC, CVrgh, or CV[wy]'.
    private static final Map<String, Integer> MAIN_SYLLABLE_TO_AUDIO_MAP;
    static {
        Map<String, Integer> initMap = new HashMap<String, Integer>();

        // THIS IS AUTOGENERATED CODE. DO NOT EDIT BELOW THIS LINE.
        // BEGIN: MAIN_SYLLABLE_TO_AUDIO_MAP
        initMap.put("baC", R.raw.audio_bac);
        initMap.put("baF", R.raw.audio_baf);
        initMap.put("baG", R.raw.audio_bag);
        initMap.put("baH", R.raw.audio_bah);
        initMap.put("baj", R.raw.audio_baj);
        initMap.put("baQ", R.raw.audio_bak);
        initMap.put("bal", R.raw.audio_bal);
        initMap.put("bam", R.raw.audio_bam);
        initMap.put("baq", R.raw.audio_baq);
        initMap.put("bar", R.raw.audio_bar);
        initMap.put("barG", R.raw.audio_barg);
        initMap.put("baS", R.raw.audio_bas);
        initMap.put("bat", R.raw.audio_bat);
        initMap.put("bav", R.raw.audio_bav);
        initMap.put("bawz", R.raw.audio_bawz);
        initMap.put("bax", R.raw.audio_bax);
        initMap.put("bay", R.raw.audio_bay);
        initMap.put("baz", R.raw.audio_baz);
        initMap.put("beb", R.raw.audio_beb);
        initMap.put("beC", R.raw.audio_bec);
        initMap.put("beG", R.raw.audio_beg);
        initMap.put("beH", R.raw.audio_beh);
        initMap.put("bej", R.raw.audio_bej);
        initMap.put("beQ", R.raw.audio_bek);
        initMap.put("bel", R.raw.audio_bel);
        initMap.put("bem", R.raw.audio_bem);
        initMap.put("ben", R.raw.audio_ben);
        initMap.put("bep", R.raw.audio_bep);
        initMap.put("beq", R.raw.audio_beq);
        initMap.put("ber", R.raw.audio_ber);
        initMap.put("berG", R.raw.audio_berg);
        initMap.put("bet", R.raw.audio_bet);
        initMap.put("bey", R.raw.audio_bey);
        initMap.put("beyz", R.raw.audio_beyz);
        initMap.put("bez", R.raw.audio_bez);
        initMap.put("bID", R.raw.audio_bid);
        initMap.put("bIF", R.raw.audio_bif);
        initMap.put("bIG", R.raw.audio_big);
        initMap.put("bIH", R.raw.audio_bih);
        initMap.put("bIj", R.raw.audio_bij);
        initMap.put("bIQ", R.raw.audio_bik);
        initMap.put("bIl", R.raw.audio_bil);
        initMap.put("bIm", R.raw.audio_bim);
        initMap.put("bIp", R.raw.audio_bip);
        initMap.put("bIr", R.raw.audio_bir);
        initMap.put("bIS", R.raw.audio_bis);
        initMap.put("bIt", R.raw.audio_bit);
        initMap.put("bIv", R.raw.audio_biv);
        initMap.put("bIz", R.raw.audio_biz);
        initMap.put("bob", R.raw.audio_bob);
        initMap.put("boC", R.raw.audio_boc);
        initMap.put("boD", R.raw.audio_bod);
        initMap.put("boF", R.raw.audio_bof);
        initMap.put("boG", R.raw.audio_bog);
        initMap.put("boH", R.raw.audio_boh);
        initMap.put("boj", R.raw.audio_boj);
        initMap.put("boQ", R.raw.audio_bok);
        initMap.put("bol", R.raw.audio_bol);
        initMap.put("bom", R.raw.audio_bom);
        initMap.put("bon", R.raw.audio_bon);
        initMap.put("bop", R.raw.audio_bop);
        initMap.put("boq", R.raw.audio_boq);
        initMap.put("bor", R.raw.audio_bor);
        initMap.put("boS", R.raw.audio_bos);
        initMap.put("bot", R.raw.audio_bot);
        initMap.put("bov", R.raw.audio_bov);
        initMap.put("box", R.raw.audio_box);
        initMap.put("boz", R.raw.audio_boz);
        initMap.put("buD", R.raw.audio_bud);
        initMap.put("buQ", R.raw.audio_buk);
        initMap.put("bup", R.raw.audio_bup);
        initMap.put("buq", R.raw.audio_buq);
        initMap.put("bur", R.raw.audio_bur);
        initMap.put("burG", R.raw.audio_burg);
        initMap.put("buS", R.raw.audio_bus);
        initMap.put("buv", R.raw.audio_buv);
        initMap.put("bux", R.raw.audio_bux);
        initMap.put("buyz", R.raw.audio_buyz);
        initMap.put("buz", R.raw.audio_buz);
        initMap.put("Cab", R.raw.audio_cab);
        initMap.put("CaC", R.raw.audio_cac);
        initMap.put("CaD", R.raw.audio_cad);
        initMap.put("CaF", R.raw.audio_caf);
        initMap.put("CaG", R.raw.audio_cag);
        initMap.put("CaH", R.raw.audio_cah);
        initMap.put("Caj", R.raw.audio_caj);
        initMap.put("CaQ", R.raw.audio_cak);
        initMap.put("Cal", R.raw.audio_cal);
        initMap.put("Cam", R.raw.audio_cam);
        initMap.put("Can", R.raw.audio_can);
        initMap.put("Cap", R.raw.audio_cap);
        initMap.put("Caq", R.raw.audio_caq);
        initMap.put("Car", R.raw.audio_car);
        initMap.put("CarG", R.raw.audio_carg);
        initMap.put("CaS", R.raw.audio_cas);
        initMap.put("Cav", R.raw.audio_cav);
        initMap.put("Caw", R.raw.audio_caw);
        initMap.put("Cawz", R.raw.audio_cawz);
        initMap.put("Cax", R.raw.audio_cax);
        initMap.put("Cay", R.raw.audio_cay);
        initMap.put("Cayz", R.raw.audio_cayz);
        initMap.put("Caz", R.raw.audio_caz);
        initMap.put("Ceb", R.raw.audio_ceb);
        initMap.put("CeC", R.raw.audio_cec);
        initMap.put("CeF", R.raw.audio_cef);
        initMap.put("CeG", R.raw.audio_ceg);
        initMap.put("CeH", R.raw.audio_ceh);
        initMap.put("Cej", R.raw.audio_cej);
        initMap.put("Cel", R.raw.audio_cel);
        initMap.put("Cem", R.raw.audio_cem);
        initMap.put("Cen", R.raw.audio_cen);
        initMap.put("Cep", R.raw.audio_cep);
        initMap.put("Ceq", R.raw.audio_ceq);
        initMap.put("Cer", R.raw.audio_cer);
        initMap.put("CerG", R.raw.audio_cerg);
        initMap.put("CeS", R.raw.audio_ces);
        initMap.put("Cet", R.raw.audio_cet);
        initMap.put("Cev", R.raw.audio_cev);
        initMap.put("Cez", R.raw.audio_cez);
        initMap.put("CIC", R.raw.audio_cic);
        initMap.put("CID", R.raw.audio_cid);
        initMap.put("CIj", R.raw.audio_cij);
        initMap.put("CIl", R.raw.audio_cil);
        initMap.put("CIm", R.raw.audio_cim);
        initMap.put("CIp", R.raw.audio_cip);
        initMap.put("CIq", R.raw.audio_ciq);
        initMap.put("CIrG", R.raw.audio_cirg);
        initMap.put("CIS", R.raw.audio_cis);
        initMap.put("CIw", R.raw.audio_ciw);
        initMap.put("CIy", R.raw.audio_ciy);
        initMap.put("Cob", R.raw.audio_cob);
        initMap.put("CoD", R.raw.audio_cod);
        initMap.put("CoF", R.raw.audio_cof);
        initMap.put("CoG", R.raw.audio_cog);
        initMap.put("CoH", R.raw.audio_coh);
        initMap.put("CoQ", R.raw.audio_cok);
        initMap.put("Col", R.raw.audio_col);
        initMap.put("Com", R.raw.audio_com);
        initMap.put("Con", R.raw.audio_con);
        initMap.put("Cop", R.raw.audio_cop);
        initMap.put("Coq", R.raw.audio_coq);
        initMap.put("Cor", R.raw.audio_cor);
        initMap.put("CorG", R.raw.audio_corg);
        initMap.put("CoS", R.raw.audio_cos);
        initMap.put("Cot", R.raw.audio_cot);
        initMap.put("Cov", R.raw.audio_cov);
        initMap.put("Coz", R.raw.audio_coz);
        initMap.put("CuC", R.raw.audio_cuc);
        initMap.put("CuD", R.raw.audio_cud);
        initMap.put("CuF", R.raw.audio_cuf);
        initMap.put("CuG", R.raw.audio_cug);
        initMap.put("CuH", R.raw.audio_cuh);
        initMap.put("Cum", R.raw.audio_cum);
        initMap.put("Cun", R.raw.audio_cun);
        initMap.put("Cup", R.raw.audio_cup);
        initMap.put("Cuq", R.raw.audio_cuq);
        initMap.put("Cur", R.raw.audio_cur);
        initMap.put("CuS", R.raw.audio_cus);
        initMap.put("Cut", R.raw.audio_cut);
        initMap.put("Cuv", R.raw.audio_cuv);
        initMap.put("Cuy", R.raw.audio_cuy);
        initMap.put("Cuz", R.raw.audio_cuz);
        initMap.put("Dab", R.raw.audio_dab);
        initMap.put("DaC", R.raw.audio_dac);
        initMap.put("DaG", R.raw.audio_dag);
        initMap.put("DaH", R.raw.audio_dah);
        initMap.put("Daj", R.raw.audio_daj);
        initMap.put("DaQ", R.raw.audio_dak);
        initMap.put("Dal", R.raw.audio_dal);
        initMap.put("Dan", R.raw.audio_dan);
        initMap.put("Dap", R.raw.audio_dap);
        initMap.put("Daq", R.raw.audio_daq);
        initMap.put("Dar", R.raw.audio_dar);
        initMap.put("DarG", R.raw.audio_darg);
        initMap.put("DaS", R.raw.audio_das);
        initMap.put("Dat", R.raw.audio_dat);
        initMap.put("Dav", R.raw.audio_dav);
        initMap.put("Daw", R.raw.audio_daw);
        initMap.put("Dawz", R.raw.audio_dawz);
        initMap.put("Day", R.raw.audio_day);
        initMap.put("Daz", R.raw.audio_daz);
        initMap.put("Deb", R.raw.audio_deb);
        initMap.put("DeC", R.raw.audio_dec);
        initMap.put("DeG", R.raw.audio_deg);
        initMap.put("DeH", R.raw.audio_deh);
        initMap.put("Dej", R.raw.audio_dej);
        initMap.put("DeQ", R.raw.audio_dek);
        initMap.put("Del", R.raw.audio_del);
        initMap.put("Dem", R.raw.audio_dem);
        initMap.put("Den", R.raw.audio_den);
        initMap.put("Dep", R.raw.audio_dep);
        initMap.put("Deq", R.raw.audio_deq);
        initMap.put("Der", R.raw.audio_der);
        initMap.put("DeS", R.raw.audio_des);
        initMap.put("Dev", R.raw.audio_dev);
        initMap.put("Dez", R.raw.audio_dez);
        initMap.put("DIb", R.raw.audio_dib);
        initMap.put("DIC", R.raw.audio_dic);
        initMap.put("DIF", R.raw.audio_dif);
        initMap.put("DIG", R.raw.audio_dig);
        initMap.put("DIj", R.raw.audio_dij);
        initMap.put("DIl", R.raw.audio_dil);
        initMap.put("DIn", R.raw.audio_din);
        initMap.put("DIp", R.raw.audio_dip);
        initMap.put("DIr", R.raw.audio_dir);
        initMap.put("DIS", R.raw.audio_dis);
        initMap.put("DIv", R.raw.audio_div);
        initMap.put("DIy", R.raw.audio_diy);
        initMap.put("DIz", R.raw.audio_diz);
        initMap.put("Dob", R.raw.audio_dob);
        initMap.put("DoC", R.raw.audio_doc);
        initMap.put("DoD", R.raw.audio_dod);
        initMap.put("DoG", R.raw.audio_dog);
        initMap.put("DoH", R.raw.audio_doh);
        initMap.put("Doj", R.raw.audio_doj);
        initMap.put("DoQ", R.raw.audio_dok);
        initMap.put("Dol", R.raw.audio_dol);
        initMap.put("Dom", R.raw.audio_dom);
        initMap.put("Don", R.raw.audio_don);
        initMap.put("Dop", R.raw.audio_dop);
        initMap.put("Doq", R.raw.audio_doq);
        initMap.put("Dor", R.raw.audio_dor);
        initMap.put("DoS", R.raw.audio_dos);
        initMap.put("Dot", R.raw.audio_dot);
        initMap.put("Dov", R.raw.audio_dov);
        initMap.put("Dox", R.raw.audio_dox);
        initMap.put("Doyz", R.raw.audio_doyz);
        initMap.put("Doz", R.raw.audio_doz);
        initMap.put("Dub", R.raw.audio_dub);
        initMap.put("DuC", R.raw.audio_duc);
        initMap.put("DuD", R.raw.audio_dud);
        initMap.put("DuF", R.raw.audio_duf);
        initMap.put("DuG", R.raw.audio_dug);
        initMap.put("DuH", R.raw.audio_duh);
        initMap.put("Duj", R.raw.audio_duj);
        initMap.put("DuQ", R.raw.audio_duk);
        initMap.put("Dum", R.raw.audio_dum);
        initMap.put("Dun", R.raw.audio_dun);
        initMap.put("Dup", R.raw.audio_dup);
        initMap.put("Duq", R.raw.audio_duq);
        initMap.put("DuS", R.raw.audio_dus);
        initMap.put("Dut", R.raw.audio_dut);
        initMap.put("Duv", R.raw.audio_duv);
        initMap.put("Duy", R.raw.audio_duy);
        initMap.put("Duyz", R.raw.audio_duyz);
        initMap.put("Duz", R.raw.audio_duz);
        initMap.put("Fab", R.raw.audio_fab);
        initMap.put("FaC", R.raw.audio_fac);
        initMap.put("FaD", R.raw.audio_fad);
        initMap.put("FaG", R.raw.audio_fag);
        initMap.put("FaH", R.raw.audio_fah);
        initMap.put("Faj", R.raw.audio_faj);
        initMap.put("FaQ", R.raw.audio_fak);
        initMap.put("Fal", R.raw.audio_fal);
        initMap.put("Fan", R.raw.audio_fan);
        initMap.put("Faq", R.raw.audio_faq);
        initMap.put("FaS", R.raw.audio_fas);
        initMap.put("Fat", R.raw.audio_fat);
        initMap.put("Fav", R.raw.audio_fav);
        initMap.put("Faw", R.raw.audio_faw);
        initMap.put("Fay", R.raw.audio_fay);
        initMap.put("Fayz", R.raw.audio_fayz);
        initMap.put("Faz", R.raw.audio_faz);
        initMap.put("Feb", R.raw.audio_feb);
        initMap.put("FeC", R.raw.audio_fec);
        initMap.put("FeD", R.raw.audio_fed);
        initMap.put("FeF", R.raw.audio_fef);
        initMap.put("FeG", R.raw.audio_feg);
        initMap.put("FeH", R.raw.audio_feh);
        initMap.put("Fej", R.raw.audio_fej);
        initMap.put("FeQ", R.raw.audio_fek);
        initMap.put("Fem", R.raw.audio_fem);
        initMap.put("Fep", R.raw.audio_fep);
        initMap.put("Fer", R.raw.audio_fer);
        initMap.put("Fev", R.raw.audio_fev);
        initMap.put("Fez", R.raw.audio_fez);
        initMap.put("FIb", R.raw.audio_fib);
        initMap.put("FID", R.raw.audio_fid);
        initMap.put("FIF", R.raw.audio_fif);
        initMap.put("FIj", R.raw.audio_fij);
        initMap.put("FIl", R.raw.audio_fil);
        initMap.put("FIm", R.raw.audio_fim);
        initMap.put("FIp", R.raw.audio_fip);
        initMap.put("FIq", R.raw.audio_fiq);
        initMap.put("FIS", R.raw.audio_fis);
        initMap.put("FIv", R.raw.audio_fiv);
        initMap.put("FIz", R.raw.audio_fiz);
        initMap.put("FoC", R.raw.audio_foc);
        initMap.put("FoD", R.raw.audio_fod);
        initMap.put("FoF", R.raw.audio_fof);
        initMap.put("FoG", R.raw.audio_fog);
        initMap.put("FoH", R.raw.audio_foh);
        initMap.put("Foj", R.raw.audio_foj);
        initMap.put("FoQ", R.raw.audio_fok);
        initMap.put("Fol", R.raw.audio_fol);
        initMap.put("Fom", R.raw.audio_fom);
        initMap.put("Fop", R.raw.audio_fop);
        initMap.put("Foq", R.raw.audio_foq);
        initMap.put("For", R.raw.audio_for);
        initMap.put("FoS", R.raw.audio_fos);
        initMap.put("Fox", R.raw.audio_fox);
        initMap.put("Foyz", R.raw.audio_foyz);
        initMap.put("Foz", R.raw.audio_foz);
        initMap.put("FuG", R.raw.audio_fug);
        initMap.put("Fuj", R.raw.audio_fuj);
        initMap.put("Fun", R.raw.audio_fun);
        initMap.put("Fup", R.raw.audio_fup);
        initMap.put("Fuq", R.raw.audio_fuq);
        initMap.put("FuS", R.raw.audio_fus);
        initMap.put("Fuv", R.raw.audio_fuv);
        initMap.put("Fux", R.raw.audio_fux);
        initMap.put("Fuz", R.raw.audio_fuz);
        initMap.put("Gab", R.raw.audio_gab);
        initMap.put("GaC", R.raw.audio_gac);
        initMap.put("GaD", R.raw.audio_gad);
        initMap.put("GaF", R.raw.audio_gaf);
        initMap.put("GaG", R.raw.audio_gag);
        initMap.put("GaH", R.raw.audio_gah);
        initMap.put("Gaj", R.raw.audio_gaj);
        initMap.put("Gal", R.raw.audio_gal);
        initMap.put("Gam", R.raw.audio_gam);
        initMap.put("Gan", R.raw.audio_gan);
        initMap.put("Gap", R.raw.audio_gap);
        initMap.put("Gaq", R.raw.audio_gaq);
        initMap.put("Gar", R.raw.audio_gar);
        initMap.put("GarG", R.raw.audio_garg);
        initMap.put("GaS", R.raw.audio_gas);
        initMap.put("Gav", R.raw.audio_gav);
        initMap.put("Gaw", R.raw.audio_gaw);
        initMap.put("Gawz", R.raw.audio_gawz);
        initMap.put("Gax", R.raw.audio_gax);
        initMap.put("Gay", R.raw.audio_gay);
        initMap.put("Gayz", R.raw.audio_gayz);
        initMap.put("Gaz", R.raw.audio_gaz);
        initMap.put("Geb", R.raw.audio_geb);
        initMap.put("GeD", R.raw.audio_ged);
        initMap.put("GeG", R.raw.audio_geg);
        initMap.put("Gel", R.raw.audio_gel);
        initMap.put("Gem", R.raw.audio_gem);
        initMap.put("Gen", R.raw.audio_gen);
        initMap.put("Gep", R.raw.audio_gep);
        initMap.put("Ger", R.raw.audio_ger);
        initMap.put("GeS", R.raw.audio_ges);
        initMap.put("Get", R.raw.audio_get);
        initMap.put("Gev", R.raw.audio_gev);
        initMap.put("Gew", R.raw.audio_gew);
        initMap.put("Gez", R.raw.audio_gez);
        initMap.put("GIb", R.raw.audio_gib);
        initMap.put("GIC", R.raw.audio_gic);
        initMap.put("GID", R.raw.audio_gid);
        initMap.put("GIG", R.raw.audio_gig);
        initMap.put("GIH", R.raw.audio_gih);
        initMap.put("GIj", R.raw.audio_gij);
        initMap.put("GIQ", R.raw.audio_gik);
        initMap.put("GIl", R.raw.audio_gil);
        initMap.put("GIm", R.raw.audio_gim);
        initMap.put("GIn", R.raw.audio_gin);
        initMap.put("GIp", R.raw.audio_gip);
        initMap.put("GIq", R.raw.audio_giq);
        initMap.put("GIr", R.raw.audio_gir);
        initMap.put("GIS", R.raw.audio_gis);
        initMap.put("GIt", R.raw.audio_git);
        initMap.put("GIv", R.raw.audio_giv);
        initMap.put("GIx", R.raw.audio_gix);
        initMap.put("GIz", R.raw.audio_giz);
        initMap.put("Gob", R.raw.audio_gob);
        initMap.put("GoC", R.raw.audio_goc);
        initMap.put("GoD", R.raw.audio_god);
        initMap.put("GoF", R.raw.audio_gof);
        initMap.put("GoG", R.raw.audio_gog);
        initMap.put("GoH", R.raw.audio_goh);
        initMap.put("Goj", R.raw.audio_goj);
        initMap.put("GoQ", R.raw.audio_gok);
        initMap.put("Gol", R.raw.audio_gol);
        initMap.put("Gom", R.raw.audio_gom);
        initMap.put("Gon", R.raw.audio_gon);
        initMap.put("Gop", R.raw.audio_gop);
        initMap.put("Goq", R.raw.audio_goq);
        initMap.put("Gor", R.raw.audio_gor);
        initMap.put("GorG", R.raw.audio_gorg);
        initMap.put("GoS", R.raw.audio_gos);
        initMap.put("Got", R.raw.audio_got);
        initMap.put("Gov", R.raw.audio_gov);
        initMap.put("Gox", R.raw.audio_gox);
        initMap.put("Goz", R.raw.audio_goz);
        initMap.put("Gub", R.raw.audio_gub);
        initMap.put("GuF", R.raw.audio_guf);
        initMap.put("GuG", R.raw.audio_gug);
        initMap.put("GuH", R.raw.audio_guh);
        initMap.put("GuQ", R.raw.audio_guk);
        initMap.put("Gul", R.raw.audio_gul);
        initMap.put("Gum", R.raw.audio_gum);
        initMap.put("Gun", R.raw.audio_gun);
        initMap.put("Gup", R.raw.audio_gup);
        initMap.put("Gur", R.raw.audio_gur);
        initMap.put("GuS", R.raw.audio_gus);
        initMap.put("Gut", R.raw.audio_gut);
        initMap.put("Guv", R.raw.audio_guv);
        initMap.put("Guyz", R.raw.audio_guyz);
        initMap.put("Guz", R.raw.audio_guz);
        initMap.put("Hab", R.raw.audio_hab);
        initMap.put("HaC", R.raw.audio_hac);
        initMap.put("HaD", R.raw.audio_had);
        initMap.put("HaG", R.raw.audio_hag);
        initMap.put("HaH", R.raw.audio_hah);
        initMap.put("Haj", R.raw.audio_haj);
        initMap.put("HaQ", R.raw.audio_hak);
        initMap.put("Hal", R.raw.audio_hal);
        initMap.put("Ham", R.raw.audio_ham);
        initMap.put("Han", R.raw.audio_han);
        initMap.put("Hap", R.raw.audio_hap);
        initMap.put("Haq", R.raw.audio_haq);
        initMap.put("Har", R.raw.audio_har);
        initMap.put("HarG", R.raw.audio_harg);
        initMap.put("HaS", R.raw.audio_has);
        initMap.put("Hat", R.raw.audio_hat);
        initMap.put("Hawz", R.raw.audio_hawz);
        initMap.put("Hax", R.raw.audio_hax);
        initMap.put("Hay", R.raw.audio_hay);
        initMap.put("Hayz", R.raw.audio_hayz);
        initMap.put("Haz", R.raw.audio_haz);
        initMap.put("HeC", R.raw.audio_hec);
        initMap.put("HeD", R.raw.audio_hed);
        initMap.put("HeF", R.raw.audio_hef);
        initMap.put("HeG", R.raw.audio_heg);
        initMap.put("HeH", R.raw.audio_heh);
        initMap.put("Hej", R.raw.audio_hej);
        initMap.put("HeQ", R.raw.audio_hek);
        initMap.put("Hem", R.raw.audio_hem);
        initMap.put("Hen", R.raw.audio_hen);
        initMap.put("Heq", R.raw.audio_heq);
        initMap.put("HerG", R.raw.audio_herg);
        initMap.put("HeS", R.raw.audio_hes);
        initMap.put("Hev", R.raw.audio_hev);
        initMap.put("Hew", R.raw.audio_hew);
        initMap.put("Hey", R.raw.audio_hey);
        initMap.put("Hez", R.raw.audio_hez);
        initMap.put("HIC", R.raw.audio_hic);
        initMap.put("HID", R.raw.audio_hid);
        initMap.put("HIG", R.raw.audio_hig);
        initMap.put("HIj", R.raw.audio_hij);
        initMap.put("HIp", R.raw.audio_hip);
        initMap.put("HIq", R.raw.audio_hiq);
        initMap.put("HIS", R.raw.audio_his);
        initMap.put("HIv", R.raw.audio_hiv);
        initMap.put("HIz", R.raw.audio_hiz);
        initMap.put("Hob", R.raw.audio_hob);
        initMap.put("HoC", R.raw.audio_hoc);
        initMap.put("HoD", R.raw.audio_hod);
        initMap.put("HoF", R.raw.audio_hof);
        initMap.put("HoG", R.raw.audio_hog);
        initMap.put("HoH", R.raw.audio_hoh);
        initMap.put("Hoj", R.raw.audio_hoj);
        initMap.put("HoQ", R.raw.audio_hok);
        initMap.put("Hol", R.raw.audio_hol);
        initMap.put("Hom", R.raw.audio_hom);
        initMap.put("Hon", R.raw.audio_hon);
        initMap.put("Hop", R.raw.audio_hop);
        initMap.put("Hoq", R.raw.audio_hoq);
        initMap.put("HoS", R.raw.audio_hos);
        initMap.put("Hot", R.raw.audio_hot);
        initMap.put("Hov", R.raw.audio_hov);
        initMap.put("Hox", R.raw.audio_hox);
        initMap.put("Hoyz", R.raw.audio_hoyz);
        initMap.put("Hoz", R.raw.audio_hoz);
        initMap.put("Hub", R.raw.audio_hub);
        initMap.put("HuC", R.raw.audio_huc);
        initMap.put("HuD", R.raw.audio_hud);
        initMap.put("HuF", R.raw.audio_huf);
        initMap.put("HuG", R.raw.audio_hug);
        initMap.put("HuH", R.raw.audio_huh);
        initMap.put("Huj", R.raw.audio_huj);
        initMap.put("Hum", R.raw.audio_hum);
        initMap.put("Hun", R.raw.audio_hun);
        initMap.put("Hup", R.raw.audio_hup);
        initMap.put("Huq", R.raw.audio_huq);
        initMap.put("Hur", R.raw.audio_hur);
        initMap.put("HurG", R.raw.audio_hurg);
        initMap.put("HuS", R.raw.audio_hus);
        initMap.put("Hut", R.raw.audio_hut);
        initMap.put("Huv", R.raw.audio_huv);
        initMap.put("Hux", R.raw.audio_hux);
        initMap.put("Huyz", R.raw.audio_huyz);
        initMap.put("Huz", R.raw.audio_huz);
        initMap.put("jab", R.raw.audio_jab);
        initMap.put("jaC", R.raw.audio_jac);
        initMap.put("jaD", R.raw.audio_jad);
        initMap.put("jaF", R.raw.audio_jaf);
        initMap.put("jaG", R.raw.audio_jag);
        initMap.put("jaH", R.raw.audio_jah);
        initMap.put("jaj", R.raw.audio_jaj);
        initMap.put("jaQ", R.raw.audio_jak);
        initMap.put("jal", R.raw.audio_jal);
        initMap.put("jan", R.raw.audio_jan);
        initMap.put("jaq", R.raw.audio_jaq);
        initMap.put("jar", R.raw.audio_jar);
        initMap.put("jarG", R.raw.audio_jarg);
        initMap.put("jaS", R.raw.audio_jas);
        initMap.put("jat", R.raw.audio_jat);
        initMap.put("jav", R.raw.audio_jav);
        initMap.put("jaw", R.raw.audio_jaw);
        initMap.put("jax", R.raw.audio_jax);
        initMap.put("jay", R.raw.audio_jay);
        initMap.put("jayz", R.raw.audio_jayz);
        initMap.put("jaz", R.raw.audio_jaz);
        initMap.put("jeC", R.raw.audio_jec);
        initMap.put("jeD", R.raw.audio_jed);
        initMap.put("jeF", R.raw.audio_jef);
        initMap.put("jeG", R.raw.audio_jeg);
        initMap.put("jeH", R.raw.audio_jeh);
        initMap.put("jej", R.raw.audio_jej);
        initMap.put("jeQ", R.raw.audio_jek);
        initMap.put("jel", R.raw.audio_jel);
        initMap.put("jem", R.raw.audio_jem);
        initMap.put("jemS", R.raw.audio_jems);
        initMap.put("jen", R.raw.audio_jen);
        initMap.put("jep", R.raw.audio_jep);
        initMap.put("jeq", R.raw.audio_jeq);
        initMap.put("jer", R.raw.audio_jer);
        initMap.put("jeS", R.raw.audio_jes);
        initMap.put("jev", R.raw.audio_jev);
        initMap.put("jey", R.raw.audio_jey);
        initMap.put("jeyz", R.raw.audio_jeyz);
        initMap.put("jez", R.raw.audio_jez);
        initMap.put("jIb", R.raw.audio_jib);
        initMap.put("jIH", R.raw.audio_jih);
        initMap.put("jIj", R.raw.audio_jij);
        initMap.put("jIl", R.raw.audio_jil);
        initMap.put("jIm", R.raw.audio_jim);
        initMap.put("jIn", R.raw.audio_jin);
        initMap.put("jIp", R.raw.audio_jip);
        initMap.put("jIq", R.raw.audio_jiq);
        initMap.put("jIr", R.raw.audio_jir);
        initMap.put("jIv", R.raw.audio_jiv);
        initMap.put("jIz", R.raw.audio_jiz);
        initMap.put("job", R.raw.audio_job);
        initMap.put("joC", R.raw.audio_joc);
        initMap.put("joD", R.raw.audio_jod);
        initMap.put("joG", R.raw.audio_jog);
        initMap.put("joH", R.raw.audio_joh);
        initMap.put("joj", R.raw.audio_joj);
        initMap.put("joQ", R.raw.audio_jok);
        initMap.put("jol", R.raw.audio_jol);
        initMap.put("jom", R.raw.audio_jom);
        initMap.put("jon", R.raw.audio_jon);
        initMap.put("jop", R.raw.audio_jop);
        initMap.put("joq", R.raw.audio_joq);
        initMap.put("jor", R.raw.audio_jor);
        initMap.put("joS", R.raw.audio_jos);
        initMap.put("jot", R.raw.audio_jot);
        initMap.put("jox", R.raw.audio_jox);
        initMap.put("joyz", R.raw.audio_joyz);
        initMap.put("joz", R.raw.audio_joz);
        initMap.put("jub", R.raw.audio_jub);
        initMap.put("juC", R.raw.audio_juc);
        initMap.put("juF", R.raw.audio_juf);
        initMap.put("juH", R.raw.audio_juh);
        initMap.put("jul", R.raw.audio_jul);
        initMap.put("jum", R.raw.audio_jum);
        initMap.put("jun", R.raw.audio_jun);
        initMap.put("jup", R.raw.audio_jup);
        initMap.put("juS", R.raw.audio_jus);
        initMap.put("juv", R.raw.audio_juv);
        initMap.put("Qab", R.raw.audio_kab);
        initMap.put("QaC", R.raw.audio_kac);
        initMap.put("QaD", R.raw.audio_kad);
        initMap.put("QaF", R.raw.audio_kaf);
        initMap.put("QaG", R.raw.audio_kag);
        initMap.put("QaH", R.raw.audio_kah);
        initMap.put("Qaj", R.raw.audio_kaj);
        initMap.put("QaQ", R.raw.audio_kak);
        initMap.put("Qal", R.raw.audio_kal);
        initMap.put("Qam", R.raw.audio_kam);
        initMap.put("Qan", R.raw.audio_kan);
        initMap.put("Qap", R.raw.audio_kap);
        initMap.put("Qaq", R.raw.audio_kaq);
        initMap.put("QarG", R.raw.audio_karg);
        initMap.put("QaS", R.raw.audio_kas);
        initMap.put("Qat", R.raw.audio_kat);
        initMap.put("Qav", R.raw.audio_kav);
        initMap.put("Qawz", R.raw.audio_kawz);
        initMap.put("Qax", R.raw.audio_kax);
        initMap.put("Qay", R.raw.audio_kay);
        initMap.put("Qayz", R.raw.audio_kayz);
        initMap.put("Qaz", R.raw.audio_kaz);
        initMap.put("Qeb", R.raw.audio_keb);
        initMap.put("QeC", R.raw.audio_kec);
        initMap.put("QeD", R.raw.audio_ked);
        initMap.put("QeH", R.raw.audio_keh);
        initMap.put("Qej", R.raw.audio_kej);
        initMap.put("Qel", R.raw.audio_kel);
        initMap.put("Qem", R.raw.audio_kem);
        initMap.put("Qen", R.raw.audio_ken);
        initMap.put("Qep", R.raw.audio_kep);
        initMap.put("Qeq", R.raw.audio_keq);
        initMap.put("Qev", R.raw.audio_kev);
        initMap.put("Qey", R.raw.audio_key);
        initMap.put("Qez", R.raw.audio_kez);
        initMap.put("QIb", R.raw.audio_kib);
        initMap.put("QIC", R.raw.audio_kic);
        initMap.put("QID", R.raw.audio_kid);
        initMap.put("QIG", R.raw.audio_kig);
        initMap.put("QIH", R.raw.audio_kih);
        initMap.put("QIj", R.raw.audio_kij);
        initMap.put("QIm", R.raw.audio_kim);
        initMap.put("QIn", R.raw.audio_kin);
        initMap.put("QIp", R.raw.audio_kip);
        initMap.put("QIq", R.raw.audio_kiq);
        initMap.put("QIS", R.raw.audio_kis);
        initMap.put("QIt", R.raw.audio_kit);
        initMap.put("QIv", R.raw.audio_kiv);
        initMap.put("QIy", R.raw.audio_kiy);
        initMap.put("QIz", R.raw.audio_kiz);
        initMap.put("Qob", R.raw.audio_kob);
        initMap.put("QoC", R.raw.audio_koc);
        initMap.put("QoD", R.raw.audio_kod);
        initMap.put("QoF", R.raw.audio_kof);
        initMap.put("QoG", R.raw.audio_kog);
        initMap.put("Qoj", R.raw.audio_koj);
        initMap.put("QoQ", R.raw.audio_kok);
        initMap.put("Qol", R.raw.audio_kol);
        initMap.put("Qom", R.raw.audio_kom);
        initMap.put("Qop", R.raw.audio_kop);
        initMap.put("Qor", R.raw.audio_kor);
        initMap.put("QorG", R.raw.audio_korg);
        initMap.put("QoS", R.raw.audio_kos);
        initMap.put("Qot", R.raw.audio_kot);
        initMap.put("Qov", R.raw.audio_kov);
        initMap.put("Qox", R.raw.audio_kox);
        initMap.put("Qoy", R.raw.audio_koy);
        initMap.put("Qoz", R.raw.audio_koz);
        initMap.put("Qub", R.raw.audio_kub);
        initMap.put("QuC", R.raw.audio_kuc);
        initMap.put("QuD", R.raw.audio_kud);
        initMap.put("QuG", R.raw.audio_kug);
        initMap.put("Quj", R.raw.audio_kuj);
        initMap.put("QuQ", R.raw.audio_kuk);
        initMap.put("Qul", R.raw.audio_kul);
        initMap.put("Qum", R.raw.audio_kum);
        initMap.put("Qun", R.raw.audio_kun);
        initMap.put("Qup", R.raw.audio_kup);
        initMap.put("Qur", R.raw.audio_kur);
        initMap.put("QuS", R.raw.audio_kus);
        initMap.put("Qut", R.raw.audio_kut);
        initMap.put("Quv", R.raw.audio_kuv);
        initMap.put("Qux", R.raw.audio_kux);
        initMap.put("Quz", R.raw.audio_kuz);
        initMap.put("lab", R.raw.audio_lab);
        initMap.put("laC", R.raw.audio_lac);
        initMap.put("laD", R.raw.audio_lad);
        initMap.put("laF", R.raw.audio_laf);
        initMap.put("laG", R.raw.audio_lag);
        initMap.put("laH", R.raw.audio_lah);
        initMap.put("laj", R.raw.audio_laj);
        initMap.put("laQ", R.raw.audio_lak);
        initMap.put("lal", R.raw.audio_lal);
        initMap.put("lam", R.raw.audio_lam);
        initMap.put("lan", R.raw.audio_lan);
        initMap.put("laq", R.raw.audio_laq);
        initMap.put("lar", R.raw.audio_lar);
        initMap.put("larG", R.raw.audio_larg);
        initMap.put("laS", R.raw.audio_las);
        initMap.put("lat", R.raw.audio_lat);
        initMap.put("lav", R.raw.audio_lav);
        initMap.put("law", R.raw.audio_law);
        initMap.put("lawz", R.raw.audio_lawz);
        initMap.put("lax", R.raw.audio_lax);
        initMap.put("lay", R.raw.audio_lay);
        initMap.put("layz", R.raw.audio_layz);
        initMap.put("laz", R.raw.audio_laz);
        initMap.put("leD", R.raw.audio_led);
        initMap.put("leF", R.raw.audio_lef);
        initMap.put("leG", R.raw.audio_leg);
        initMap.put("leH", R.raw.audio_leh);
        initMap.put("leQ", R.raw.audio_lek);
        initMap.put("lel", R.raw.audio_lel);
        initMap.put("lem", R.raw.audio_lem);
        initMap.put("len", R.raw.audio_len);
        initMap.put("lep", R.raw.audio_lep);
        initMap.put("leq", R.raw.audio_leq);
        initMap.put("ler", R.raw.audio_ler);
        initMap.put("leS", R.raw.audio_les);
        initMap.put("let", R.raw.audio_let);
        initMap.put("lev", R.raw.audio_lev);
        initMap.put("lex", R.raw.audio_lex);
        initMap.put("leyz", R.raw.audio_leyz);
        initMap.put("lez", R.raw.audio_lez);
        initMap.put("lIb", R.raw.audio_lib);
        initMap.put("lIC", R.raw.audio_lic);
        initMap.put("lIF", R.raw.audio_lif);
        initMap.put("lIG", R.raw.audio_lig);
        initMap.put("lIH", R.raw.audio_lih);
        initMap.put("lIj", R.raw.audio_lij);
        initMap.put("lIl", R.raw.audio_lil);
        initMap.put("lIm", R.raw.audio_lim);
        initMap.put("lIn", R.raw.audio_lin);
        initMap.put("lIq", R.raw.audio_liq);
        initMap.put("lIr", R.raw.audio_lir);
        initMap.put("lIS", R.raw.audio_lis);
        initMap.put("lIt", R.raw.audio_lit);
        initMap.put("lIw", R.raw.audio_liw);
        initMap.put("lIy", R.raw.audio_liy);
        initMap.put("lIz", R.raw.audio_liz);
        initMap.put("lob", R.raw.audio_lob);
        initMap.put("loC", R.raw.audio_loc);
        initMap.put("loD", R.raw.audio_lod);
        initMap.put("loG", R.raw.audio_log);
        initMap.put("loH", R.raw.audio_loh);
        initMap.put("loj", R.raw.audio_loj);
        initMap.put("loQ", R.raw.audio_lok);
        initMap.put("lol", R.raw.audio_lol);
        initMap.put("lom", R.raw.audio_lom);
        initMap.put("lon", R.raw.audio_lon);
        initMap.put("lop", R.raw.audio_lop);
        initMap.put("lor", R.raw.audio_lor);
        initMap.put("loS", R.raw.audio_los);
        initMap.put("lot", R.raw.audio_lot);
        initMap.put("lox", R.raw.audio_lox);
        initMap.put("loy", R.raw.audio_loy);
        initMap.put("loyz", R.raw.audio_loyz);
        initMap.put("loz", R.raw.audio_loz);
        initMap.put("luC", R.raw.audio_luc);
        initMap.put("luF", R.raw.audio_luf);
        initMap.put("luG", R.raw.audio_lug);
        initMap.put("luH", R.raw.audio_luh);
        initMap.put("luj", R.raw.audio_luj);
        initMap.put("luQ", R.raw.audio_luk);
        initMap.put("lul", R.raw.audio_lul);
        initMap.put("lum", R.raw.audio_lum);
        initMap.put("lun", R.raw.audio_lun);
        initMap.put("lup", R.raw.audio_lup);
        initMap.put("luq", R.raw.audio_luq);
        initMap.put("lur", R.raw.audio_lur);
        initMap.put("lurG", R.raw.audio_lurg);
        initMap.put("luS", R.raw.audio_lus);
        initMap.put("lut", R.raw.audio_lut);
        initMap.put("lux", R.raw.audio_lux);
        initMap.put("luz", R.raw.audio_luz);
        initMap.put("mab", R.raw.audio_mab);
        initMap.put("maC", R.raw.audio_mac);
        initMap.put("maD", R.raw.audio_mad);
        initMap.put("maF", R.raw.audio_maf);
        initMap.put("maG", R.raw.audio_mag);
        initMap.put("maH", R.raw.audio_mah);
        initMap.put("maj", R.raw.audio_maj);
        initMap.put("maQ", R.raw.audio_mak);
        initMap.put("mal", R.raw.audio_mal);
        initMap.put("mam", R.raw.audio_mam);
        initMap.put("man", R.raw.audio_man);
        initMap.put("maq", R.raw.audio_maq);
        initMap.put("mar", R.raw.audio_mar);
        initMap.put("marG", R.raw.audio_marg);
        initMap.put("marq", R.raw.audio_marq);
        initMap.put("maS", R.raw.audio_mas);
        initMap.put("mat", R.raw.audio_mat);
        initMap.put("mav", R.raw.audio_mav);
        initMap.put("maw", R.raw.audio_maw);
        initMap.put("mawz", R.raw.audio_mawz);
        initMap.put("max", R.raw.audio_max);
        initMap.put("may", R.raw.audio_may);
        initMap.put("mayz", R.raw.audio_mayz);
        initMap.put("maz", R.raw.audio_maz);
        initMap.put("meb", R.raw.audio_meb);
        initMap.put("meC", R.raw.audio_mec);
        initMap.put("meF", R.raw.audio_mef);
        initMap.put("meG", R.raw.audio_meg);
        initMap.put("meH", R.raw.audio_meh);
        initMap.put("mej", R.raw.audio_mej);
        initMap.put("meQ", R.raw.audio_mek);
        initMap.put("mel", R.raw.audio_mel);
        initMap.put("mem", R.raw.audio_mem);
        initMap.put("mep", R.raw.audio_mep);
        initMap.put("meq", R.raw.audio_meq);
        initMap.put("mer", R.raw.audio_mer);
        initMap.put("meS", R.raw.audio_mes);
        initMap.put("mev", R.raw.audio_mev);
        initMap.put("mey", R.raw.audio_mey);
        initMap.put("meyz", R.raw.audio_meyz);
        initMap.put("mez", R.raw.audio_mez);
        initMap.put("mIC", R.raw.audio_mic);
        initMap.put("mID", R.raw.audio_mid);
        initMap.put("mIG", R.raw.audio_mig);
        initMap.put("mIj", R.raw.audio_mij);
        initMap.put("mIQ", R.raw.audio_mik);
        initMap.put("mIl", R.raw.audio_mil);
        initMap.put("mIm", R.raw.audio_mim);
        initMap.put("mIn", R.raw.audio_min);
        initMap.put("mIp", R.raw.audio_mip);
        initMap.put("mIq", R.raw.audio_miq);
        initMap.put("mIr", R.raw.audio_mir);
        initMap.put("mIS", R.raw.audio_mis);
        initMap.put("mIt", R.raw.audio_mit);
        initMap.put("mIv", R.raw.audio_miv);
        initMap.put("mIw", R.raw.audio_miw);
        initMap.put("mIx", R.raw.audio_mix);
        initMap.put("mIy", R.raw.audio_miy);
        initMap.put("mIz", R.raw.audio_miz);
        initMap.put("mob", R.raw.audio_mob);
        initMap.put("moC", R.raw.audio_moc);
        initMap.put("moD", R.raw.audio_mod);
        initMap.put("moF", R.raw.audio_mof);
        initMap.put("moG", R.raw.audio_mog);
        initMap.put("moH", R.raw.audio_moh);
        initMap.put("moj", R.raw.audio_moj);
        initMap.put("moQ", R.raw.audio_mok);
        initMap.put("mol", R.raw.audio_mol);
        initMap.put("mon", R.raw.audio_mon);
        initMap.put("mop", R.raw.audio_mop);
        initMap.put("moq", R.raw.audio_moq);
        initMap.put("mor", R.raw.audio_mor);
        initMap.put("morG", R.raw.audio_morg);
        initMap.put("moS", R.raw.audio_mos);
        initMap.put("mot", R.raw.audio_mot);
        initMap.put("mov", R.raw.audio_mov);
        initMap.put("mox", R.raw.audio_mox);
        initMap.put("moyz", R.raw.audio_moyz);
        initMap.put("moz", R.raw.audio_moz);
        initMap.put("mub", R.raw.audio_mub);
        initMap.put("muC", R.raw.audio_muc);
        initMap.put("muD", R.raw.audio_mud);
        initMap.put("muF", R.raw.audio_muf);
        initMap.put("muG", R.raw.audio_mug);
        initMap.put("muH", R.raw.audio_muh);
        initMap.put("muj", R.raw.audio_muj);
        initMap.put("mul", R.raw.audio_mul);
        initMap.put("mum", R.raw.audio_mum);
        initMap.put("mun", R.raw.audio_mun);
        initMap.put("mup", R.raw.audio_mup);
        initMap.put("muq", R.raw.audio_muq);
        initMap.put("muS", R.raw.audio_mus);
        initMap.put("mut", R.raw.audio_mut);
        initMap.put("muv", R.raw.audio_muv);
        initMap.put("mux", R.raw.audio_mux);
        initMap.put("muy", R.raw.audio_muy);
        initMap.put("muz", R.raw.audio_muz);
        initMap.put("nab", R.raw.audio_nab);
        initMap.put("naC", R.raw.audio_nac);
        initMap.put("naD", R.raw.audio_nad);
        initMap.put("naG", R.raw.audio_nag);
        initMap.put("naH", R.raw.audio_nah);
        initMap.put("naj", R.raw.audio_naj);
        initMap.put("naQ", R.raw.audio_nak);
        initMap.put("nal", R.raw.audio_nal);
        initMap.put("nam", R.raw.audio_nam);
        initMap.put("nan", R.raw.audio_nan);
        initMap.put("nap", R.raw.audio_nap);
        initMap.put("naq", R.raw.audio_naq);
        initMap.put("nar", R.raw.audio_nar);
        initMap.put("narG", R.raw.audio_narg);
        initMap.put("naS", R.raw.audio_nas);
        initMap.put("nat", R.raw.audio_nat);
        initMap.put("nav", R.raw.audio_nav);
        initMap.put("naw", R.raw.audio_naw);
        initMap.put("nawz", R.raw.audio_nawz);
        initMap.put("nax", R.raw.audio_nax);
        initMap.put("nay", R.raw.audio_nay);
        initMap.put("nayz", R.raw.audio_nayz);
        initMap.put("naz", R.raw.audio_naz);
        initMap.put("neb", R.raw.audio_neb);
        initMap.put("neC", R.raw.audio_nec);
        initMap.put("neG", R.raw.audio_neg);
        initMap.put("neH", R.raw.audio_neh);
        initMap.put("nej", R.raw.audio_nej);
        initMap.put("neQ", R.raw.audio_nek);
        initMap.put("nel", R.raw.audio_nel);
        initMap.put("nem", R.raw.audio_nem);
        initMap.put("nen", R.raw.audio_nen);
        initMap.put("nep", R.raw.audio_nep);
        initMap.put("neS", R.raw.audio_nes);
        initMap.put("net", R.raw.audio_net);
        initMap.put("nev", R.raw.audio_nev);
        initMap.put("nex", R.raw.audio_nex);
        initMap.put("nez", R.raw.audio_nez);
        initMap.put("nIb", R.raw.audio_nib);
        initMap.put("nIC", R.raw.audio_nic);
        initMap.put("nID", R.raw.audio_nid);
        initMap.put("nIG", R.raw.audio_nig);
        initMap.put("nIH", R.raw.audio_nih);
        initMap.put("nIj", R.raw.audio_nij);
        initMap.put("nIQ", R.raw.audio_nik);
        initMap.put("nIl", R.raw.audio_nil);
        initMap.put("nIm", R.raw.audio_nim);
        initMap.put("nIn", R.raw.audio_nin);
        initMap.put("nIq", R.raw.audio_niq);
        initMap.put("nIS", R.raw.audio_nis);
        initMap.put("nIt", R.raw.audio_nit);
        initMap.put("nIv", R.raw.audio_niv);
        initMap.put("nIx", R.raw.audio_nix);
        initMap.put("nIy", R.raw.audio_niy);
        initMap.put("nIz", R.raw.audio_niz);
        initMap.put("nob", R.raw.audio_nob);
        initMap.put("noC", R.raw.audio_noc);
        initMap.put("noD", R.raw.audio_nod);
        initMap.put("noF", R.raw.audio_nof);
        initMap.put("noG", R.raw.audio_nog);
        initMap.put("noH", R.raw.audio_noh);
        initMap.put("noj", R.raw.audio_noj);
        initMap.put("nol", R.raw.audio_nol);
        initMap.put("nom", R.raw.audio_nom);
        initMap.put("non", R.raw.audio_non);
        initMap.put("nop", R.raw.audio_nop);
        initMap.put("noq", R.raw.audio_noq);
        initMap.put("norG", R.raw.audio_norg);
        initMap.put("noS", R.raw.audio_nos);
        initMap.put("not", R.raw.audio_not);
        initMap.put("nov", R.raw.audio_nov);
        initMap.put("nox", R.raw.audio_nox);
        initMap.put("noy", R.raw.audio_noy);
        initMap.put("noz", R.raw.audio_noz);
        initMap.put("nub", R.raw.audio_nub);
        initMap.put("nuC", R.raw.audio_nuc);
        initMap.put("nuD", R.raw.audio_nud);
        initMap.put("nuF", R.raw.audio_nuf);
        initMap.put("nuG", R.raw.audio_nug);
        initMap.put("nuH", R.raw.audio_nuh);
        initMap.put("nuj", R.raw.audio_nuj);
        initMap.put("nuQ", R.raw.audio_nuk);
        initMap.put("num", R.raw.audio_num);
        initMap.put("nup", R.raw.audio_nup);
        initMap.put("nuq", R.raw.audio_nuq);
        initMap.put("nur", R.raw.audio_nur);
        initMap.put("nuS", R.raw.audio_nus);
        initMap.put("nuv", R.raw.audio_nuv);
        initMap.put("nuz", R.raw.audio_nuz);
        initMap.put("pab", R.raw.audio_pab);
        initMap.put("paC", R.raw.audio_pac);
        initMap.put("paF", R.raw.audio_paf);
        initMap.put("paG", R.raw.audio_pag);
        initMap.put("paH", R.raw.audio_pah);
        initMap.put("paj", R.raw.audio_paj);
        initMap.put("paQ", R.raw.audio_pak);
        initMap.put("pal", R.raw.audio_pal);
        initMap.put("pan", R.raw.audio_pan);
        initMap.put("paq", R.raw.audio_paq);
        initMap.put("paqz", R.raw.audio_paqz);
        initMap.put("par", R.raw.audio_par);
        initMap.put("paS", R.raw.audio_pas);
        initMap.put("pat", R.raw.audio_pat);
        initMap.put("pav", R.raw.audio_pav);
        initMap.put("paw", R.raw.audio_paw);
        initMap.put("pawz", R.raw.audio_pawz);
        initMap.put("pax", R.raw.audio_pax);
        initMap.put("pay", R.raw.audio_pay);
        initMap.put("payz", R.raw.audio_payz);
        initMap.put("paz", R.raw.audio_paz);
        initMap.put("peb", R.raw.audio_peb);
        initMap.put("peD", R.raw.audio_ped);
        initMap.put("peF", R.raw.audio_pef);
        initMap.put("peG", R.raw.audio_peg);
        initMap.put("peH", R.raw.audio_peh);
        initMap.put("pej", R.raw.audio_pej);
        initMap.put("peQ", R.raw.audio_pek);
        initMap.put("pel", R.raw.audio_pel);
        initMap.put("pem", R.raw.audio_pem);
        initMap.put("pen", R.raw.audio_pen);
        initMap.put("pep", R.raw.audio_pep);
        initMap.put("peq", R.raw.audio_peq);
        initMap.put("per", R.raw.audio_per);
        initMap.put("peS", R.raw.audio_pes);
        initMap.put("pet", R.raw.audio_pet);
        initMap.put("pev", R.raw.audio_pev);
        initMap.put("pey", R.raw.audio_pey);
        initMap.put("peyz", R.raw.audio_peyz);
        initMap.put("pez", R.raw.audio_pez);
        initMap.put("pIC", R.raw.audio_pic);
        initMap.put("pID", R.raw.audio_pid);
        initMap.put("pIG", R.raw.audio_pig);
        initMap.put("pIH", R.raw.audio_pih);
        initMap.put("pIj", R.raw.audio_pij);
        initMap.put("pIQ", R.raw.audio_pik);
        initMap.put("pIl", R.raw.audio_pil);
        initMap.put("pIm", R.raw.audio_pim);
        initMap.put("pIn", R.raw.audio_pin);
        initMap.put("pIp", R.raw.audio_pip);
        initMap.put("pIq", R.raw.audio_piq);
        initMap.put("pIr", R.raw.audio_pir);
        initMap.put("pIt", R.raw.audio_pit);
        initMap.put("pIv", R.raw.audio_piv);
        initMap.put("pIw", R.raw.audio_piw);
        initMap.put("pIx", R.raw.audio_pix);
        initMap.put("pIz", R.raw.audio_piz);
        initMap.put("pob", R.raw.audio_pob);
        initMap.put("poC", R.raw.audio_poc);
        initMap.put("poD", R.raw.audio_pod);
        initMap.put("poF", R.raw.audio_pof);
        initMap.put("poG", R.raw.audio_pog);
        initMap.put("poH", R.raw.audio_poh);
        initMap.put("poj", R.raw.audio_poj);
        initMap.put("poQ", R.raw.audio_pok);
        initMap.put("pol", R.raw.audio_pol);
        initMap.put("pom", R.raw.audio_pom);
        initMap.put("pon", R.raw.audio_pon);
        initMap.put("pop", R.raw.audio_pop);
        initMap.put("poq", R.raw.audio_poq);
        initMap.put("por", R.raw.audio_por);
        initMap.put("porG", R.raw.audio_porg);
        initMap.put("poS", R.raw.audio_pos);
        initMap.put("pov", R.raw.audio_pov);
        initMap.put("pox", R.raw.audio_pox);
        initMap.put("poz", R.raw.audio_poz);
        initMap.put("pub", R.raw.audio_pub);
        initMap.put("puC", R.raw.audio_puc);
        initMap.put("puF", R.raw.audio_puf);
        initMap.put("puG", R.raw.audio_pug);
        initMap.put("puH", R.raw.audio_puh);
        initMap.put("puj", R.raw.audio_puj);
        initMap.put("puQ", R.raw.audio_puk);
        initMap.put("pul", R.raw.audio_pul);
        initMap.put("pum", R.raw.audio_pum);
        initMap.put("pup", R.raw.audio_pup);
        initMap.put("puq", R.raw.audio_puq);
        initMap.put("pur", R.raw.audio_pur);
        initMap.put("puS", R.raw.audio_pus);
        initMap.put("puv", R.raw.audio_puv);
        initMap.put("puy", R.raw.audio_puy);
        initMap.put("puz", R.raw.audio_puz);
        initMap.put("qab", R.raw.audio_qab);
        initMap.put("qaC", R.raw.audio_qac);
        initMap.put("qaD", R.raw.audio_qad);
        initMap.put("qaF", R.raw.audio_qaf);
        initMap.put("qaG", R.raw.audio_qag);
        initMap.put("qaH", R.raw.audio_qah);
        initMap.put("qaj", R.raw.audio_qaj);
        initMap.put("qal", R.raw.audio_qal);
        initMap.put("qam", R.raw.audio_qam);
        initMap.put("qan", R.raw.audio_qan);
        initMap.put("qap", R.raw.audio_qap);
        initMap.put("qaq", R.raw.audio_qaq);
        initMap.put("qar", R.raw.audio_qar);
        initMap.put("qarD", R.raw.audio_qard);
        initMap.put("qaS", R.raw.audio_qas);
        initMap.put("qat", R.raw.audio_qat);
        initMap.put("qav", R.raw.audio_qav);
        initMap.put("qaw", R.raw.audio_qaw);
        initMap.put("qax", R.raw.audio_qax);
        initMap.put("qay", R.raw.audio_qay);
        initMap.put("qayz", R.raw.audio_qayz);
        initMap.put("qaz", R.raw.audio_qaz);
        initMap.put("qeb", R.raw.audio_qeb);
        initMap.put("qeC", R.raw.audio_qec);
        initMap.put("qeD", R.raw.audio_qed);
        initMap.put("qeF", R.raw.audio_qef);
        initMap.put("qeG", R.raw.audio_qeg);
        initMap.put("qeH", R.raw.audio_qeh);
        initMap.put("qej", R.raw.audio_qej);
        initMap.put("qeQ", R.raw.audio_qek);
        initMap.put("qel", R.raw.audio_qel);
        initMap.put("qem", R.raw.audio_qem);
        initMap.put("qen", R.raw.audio_qen);
        initMap.put("qep", R.raw.audio_qep);
        initMap.put("qeq", R.raw.audio_qeq);
        initMap.put("qeS", R.raw.audio_qes);
        initMap.put("qet", R.raw.audio_qet);
        initMap.put("qev", R.raw.audio_qev);
        initMap.put("qew", R.raw.audio_qew);
        initMap.put("qex", R.raw.audio_qex);
        initMap.put("qey", R.raw.audio_qey);
        initMap.put("qez", R.raw.audio_qez);
        initMap.put("qIb", R.raw.audio_qib);
        initMap.put("qIC", R.raw.audio_qic);
        initMap.put("qID", R.raw.audio_qid);
        initMap.put("qIG", R.raw.audio_qig);
        initMap.put("qIH", R.raw.audio_qih);
        initMap.put("qIj", R.raw.audio_qij);
        initMap.put("qIQ", R.raw.audio_qik);
        initMap.put("qIl", R.raw.audio_qil);
        initMap.put("qIm", R.raw.audio_qim);
        initMap.put("qIn", R.raw.audio_qin);
        initMap.put("qIp", R.raw.audio_qip);
        initMap.put("qIq", R.raw.audio_qiq);
        initMap.put("qIrq", R.raw.audio_qirq);
        initMap.put("qIt", R.raw.audio_qit);
        initMap.put("qIv", R.raw.audio_qiv);
        initMap.put("qIy", R.raw.audio_qiy);
        initMap.put("qIz", R.raw.audio_qiz);
        initMap.put("qoC", R.raw.audio_qoc);
        initMap.put("qoD", R.raw.audio_qod);
        initMap.put("qoG", R.raw.audio_qog);
        initMap.put("qoH", R.raw.audio_qoh);
        initMap.put("qoj", R.raw.audio_qoj);
        initMap.put("qol", R.raw.audio_qol);
        initMap.put("qom", R.raw.audio_qom);
        initMap.put("qon", R.raw.audio_qon);
        initMap.put("qop", R.raw.audio_qop);
        initMap.put("qoq", R.raw.audio_qoq);
        initMap.put("qor", R.raw.audio_qor);
        initMap.put("qorG", R.raw.audio_qorg);
        initMap.put("qoS", R.raw.audio_qos);
        initMap.put("qox", R.raw.audio_qox);
        initMap.put("qoyz", R.raw.audio_qoyz);
        initMap.put("qoz", R.raw.audio_qoz);
        initMap.put("qub", R.raw.audio_qub);
        initMap.put("quC", R.raw.audio_quc);
        initMap.put("quD", R.raw.audio_qud);
        initMap.put("quF", R.raw.audio_quf);
        initMap.put("quG", R.raw.audio_qug);
        initMap.put("quH", R.raw.audio_quh);
        initMap.put("quj", R.raw.audio_quj);
        initMap.put("qul", R.raw.audio_qul);
        initMap.put("qum", R.raw.audio_qum);
        initMap.put("qun", R.raw.audio_qun);
        initMap.put("qup", R.raw.audio_qup);
        initMap.put("quq", R.raw.audio_quq);
        initMap.put("qur", R.raw.audio_qur);
        initMap.put("qurG", R.raw.audio_qurg);
        initMap.put("quS", R.raw.audio_qus);
        initMap.put("qut", R.raw.audio_qut);
        initMap.put("quv", R.raw.audio_quv);
        initMap.put("qux", R.raw.audio_qux);
        initMap.put("quy", R.raw.audio_quy);
        initMap.put("quz", R.raw.audio_quz);
        initMap.put("rab", R.raw.audio_rab);
        initMap.put("raC", R.raw.audio_rac);
        initMap.put("raD", R.raw.audio_rad);
        initMap.put("raG", R.raw.audio_rag);
        initMap.put("raH", R.raw.audio_rah);
        initMap.put("raj", R.raw.audio_raj);
        initMap.put("raQ", R.raw.audio_rak);
        initMap.put("ral", R.raw.audio_ral);
        initMap.put("ram", R.raw.audio_ram);
        initMap.put("ran", R.raw.audio_ran);
        initMap.put("ranD", R.raw.audio_rand);
        initMap.put("rap", R.raw.audio_rap);
        initMap.put("raq", R.raw.audio_raq);
        initMap.put("rar", R.raw.audio_rar);
        initMap.put("raS", R.raw.audio_ras);
        initMap.put("rat", R.raw.audio_rat);
        initMap.put("rav", R.raw.audio_rav);
        initMap.put("raw", R.raw.audio_raw);
        initMap.put("rawz", R.raw.audio_rawz);
        initMap.put("rax", R.raw.audio_rax);
        initMap.put("ray", R.raw.audio_ray);
        initMap.put("rayz", R.raw.audio_rayz);
        initMap.put("raz", R.raw.audio_raz);
        initMap.put("reC", R.raw.audio_rec);
        initMap.put("reD", R.raw.audio_red);
        initMap.put("reG", R.raw.audio_reg);
        initMap.put("reH", R.raw.audio_reh);
        initMap.put("rej", R.raw.audio_rej);
        initMap.put("reQ", R.raw.audio_rek);
        initMap.put("rel", R.raw.audio_rel);
        initMap.put("rem", R.raw.audio_rem);
        initMap.put("ren", R.raw.audio_ren);
        initMap.put("rep", R.raw.audio_rep);
        initMap.put("req", R.raw.audio_req);
        initMap.put("reS", R.raw.audio_res);
        initMap.put("ret", R.raw.audio_ret);
        initMap.put("rew", R.raw.audio_rew);
        initMap.put("rex", R.raw.audio_rex);
        initMap.put("rey", R.raw.audio_rey);
        initMap.put("reyz", R.raw.audio_reyz);
        initMap.put("rez", R.raw.audio_rez);
        initMap.put("rIb", R.raw.audio_rib);
        initMap.put("rIC", R.raw.audio_ric);
        initMap.put("rID", R.raw.audio_rid);
        initMap.put("rIG", R.raw.audio_rig);
        initMap.put("rIH", R.raw.audio_rih);
        initMap.put("rIj", R.raw.audio_rij);
        initMap.put("rIQ", R.raw.audio_rik);
        initMap.put("rIl", R.raw.audio_ril);
        initMap.put("rIn", R.raw.audio_rin);
        initMap.put("rIp", R.raw.audio_rip);
        initMap.put("rIq", R.raw.audio_riq);
        initMap.put("rIS", R.raw.audio_ris);
        initMap.put("rIt", R.raw.audio_rit);
        initMap.put("rIv", R.raw.audio_riv);
        initMap.put("rIx", R.raw.audio_rix);
        initMap.put("rIy", R.raw.audio_riy);
        initMap.put("rIz", R.raw.audio_riz);
        initMap.put("roD", R.raw.audio_rod);
        initMap.put("roG", R.raw.audio_rog);
        initMap.put("roH", R.raw.audio_roh);
        initMap.put("roj", R.raw.audio_roj);
        initMap.put("roQ", R.raw.audio_rok);
        initMap.put("rol", R.raw.audio_rol);
        initMap.put("rom", R.raw.audio_rom);
        initMap.put("ron", R.raw.audio_ron);
        initMap.put("rop", R.raw.audio_rop);
        initMap.put("roq", R.raw.audio_roq);
        initMap.put("ror", R.raw.audio_ror);
        initMap.put("roS", R.raw.audio_ros);
        initMap.put("rot", R.raw.audio_rot);
        initMap.put("rox", R.raw.audio_rox);
        initMap.put("royz", R.raw.audio_royz);
        initMap.put("roz", R.raw.audio_roz);
        initMap.put("ruC", R.raw.audio_ruc);
        initMap.put("ruG", R.raw.audio_rug);
        initMap.put("ruj", R.raw.audio_ruj);
        initMap.put("ruQ", R.raw.audio_ruk);
        initMap.put("rum", R.raw.audio_rum);
        initMap.put("run", R.raw.audio_run);
        initMap.put("rup", R.raw.audio_rup);
        initMap.put("ruq", R.raw.audio_ruq);
        initMap.put("rur", R.raw.audio_rur);
        initMap.put("ruS", R.raw.audio_rus);
        initMap.put("rut", R.raw.audio_rut);
        initMap.put("ruv", R.raw.audio_ruv);
        initMap.put("rux", R.raw.audio_rux);
        initMap.put("ruz", R.raw.audio_ruz);
        initMap.put("Sab", R.raw.audio_sab);
        initMap.put("SaC", R.raw.audio_sac);
        initMap.put("SaD", R.raw.audio_sad);
        initMap.put("SaF", R.raw.audio_saf);
        initMap.put("SaG", R.raw.audio_sag);
        initMap.put("SaH", R.raw.audio_sah);
        initMap.put("Saj", R.raw.audio_saj);
        initMap.put("SaQ", R.raw.audio_sak);
        initMap.put("Sal", R.raw.audio_sal);
        initMap.put("Sam", R.raw.audio_sam);
        initMap.put("San", R.raw.audio_san);
        initMap.put("Sap", R.raw.audio_sap);
        initMap.put("Saq", R.raw.audio_saq);
        initMap.put("Sar", R.raw.audio_sar);
        initMap.put("SarG", R.raw.audio_sarg);
        initMap.put("SaS", R.raw.audio_sas);
        initMap.put("Saw", R.raw.audio_saw);
        initMap.put("Sawz", R.raw.audio_sawz);
        initMap.put("Sax", R.raw.audio_sax);
        initMap.put("Say", R.raw.audio_say);
        initMap.put("Sayz", R.raw.audio_sayz);
        initMap.put("Saz", R.raw.audio_saz);
        initMap.put("SeC", R.raw.audio_sec);
        initMap.put("SeD", R.raw.audio_sed);
        initMap.put("SeF", R.raw.audio_sef);
        initMap.put("SeG", R.raw.audio_seg);
        initMap.put("SeH", R.raw.audio_seh);
        initMap.put("SeQ", R.raw.audio_sek);
        initMap.put("Sel", R.raw.audio_sel);
        initMap.put("Sen", R.raw.audio_sen);
        initMap.put("Sep", R.raw.audio_sep);
        initMap.put("Seq", R.raw.audio_seq);
        initMap.put("Ser", R.raw.audio_ser);
        initMap.put("SeS", R.raw.audio_ses);
        initMap.put("Set", R.raw.audio_set);
        initMap.put("Sev", R.raw.audio_sev);
        initMap.put("Sey", R.raw.audio_sey);
        initMap.put("Sez", R.raw.audio_sez);
        initMap.put("SIb", R.raw.audio_sib);
        initMap.put("SIC", R.raw.audio_sic);
        initMap.put("SID", R.raw.audio_sid);
        initMap.put("SIG", R.raw.audio_sig);
        initMap.put("SIH", R.raw.audio_sih);
        initMap.put("SIj", R.raw.audio_sij);
        initMap.put("SIQ", R.raw.audio_sik);
        initMap.put("SIm", R.raw.audio_sim);
        initMap.put("SIp", R.raw.audio_sip);
        initMap.put("SIq", R.raw.audio_siq);
        initMap.put("SIr", R.raw.audio_sir);
        initMap.put("SIrG", R.raw.audio_sirg);
        initMap.put("SIS", R.raw.audio_sis);
        initMap.put("SIv", R.raw.audio_siv);
        initMap.put("SIw", R.raw.audio_siw);
        initMap.put("SIy", R.raw.audio_siy);
        initMap.put("SoC", R.raw.audio_soc);
        initMap.put("SoD", R.raw.audio_sod);
        initMap.put("SoF", R.raw.audio_sof);
        initMap.put("SoG", R.raw.audio_sog);
        initMap.put("SoH", R.raw.audio_soh);
        initMap.put("Soj", R.raw.audio_soj);
        initMap.put("SoQ", R.raw.audio_sok);
        initMap.put("Sol", R.raw.audio_sol);
        initMap.put("Som", R.raw.audio_som);
        initMap.put("Son", R.raw.audio_son);
        initMap.put("Sop", R.raw.audio_sop);
        initMap.put("Soq", R.raw.audio_soq);
        initMap.put("Sor", R.raw.audio_sor);
        initMap.put("SorG", R.raw.audio_sorg);
        initMap.put("SoS", R.raw.audio_sos);
        initMap.put("Sot", R.raw.audio_sot);
        initMap.put("Sov", R.raw.audio_sov);
        initMap.put("Soy", R.raw.audio_soy);
        initMap.put("Soyz", R.raw.audio_soyz);
        initMap.put("Soz", R.raw.audio_soz);
        initMap.put("Sub", R.raw.audio_sub);
        initMap.put("SuC", R.raw.audio_suc);
        initMap.put("SuD", R.raw.audio_sud);
        initMap.put("SuF", R.raw.audio_suf);
        initMap.put("SuG", R.raw.audio_sug);
        initMap.put("SuH", R.raw.audio_suh);
        initMap.put("Suj", R.raw.audio_suj);
        initMap.put("SuQ", R.raw.audio_suk);
        initMap.put("Sum", R.raw.audio_sum);
        initMap.put("Sun", R.raw.audio_sun);
        initMap.put("Sup", R.raw.audio_sup);
        initMap.put("Suq", R.raw.audio_suq);
        initMap.put("Sur", R.raw.audio_sur);
        initMap.put("SurG", R.raw.audio_surg);
        initMap.put("SuS", R.raw.audio_sus);
        initMap.put("Sut", R.raw.audio_sut);
        initMap.put("Suv", R.raw.audio_suv);
        initMap.put("Sux", R.raw.audio_sux);
        initMap.put("Suy", R.raw.audio_suy);
        initMap.put("Suyz", R.raw.audio_suyz);
        initMap.put("Suz", R.raw.audio_suz);
        initMap.put("taC", R.raw.audio_tac);
        initMap.put("taD", R.raw.audio_tad);
        initMap.put("taF", R.raw.audio_taf);
        initMap.put("taG", R.raw.audio_tag);
        initMap.put("taH", R.raw.audio_tah);
        initMap.put("taj", R.raw.audio_taj);
        initMap.put("taQ", R.raw.audio_tak);
        initMap.put("tal", R.raw.audio_tal);
        initMap.put("tam", R.raw.audio_tam);
        initMap.put("tan", R.raw.audio_tan);
        initMap.put("tap", R.raw.audio_tap);
        initMap.put("taq", R.raw.audio_taq);
        initMap.put("tar", R.raw.audio_tar);
        initMap.put("tarG", R.raw.audio_targ);
        initMap.put("taS", R.raw.audio_tas);
        initMap.put("tat", R.raw.audio_tat);
        initMap.put("tav", R.raw.audio_tav);
        initMap.put("taw", R.raw.audio_taw);
        initMap.put("tax", R.raw.audio_tax);
        initMap.put("tay", R.raw.audio_tay);
        initMap.put("tayz", R.raw.audio_tayz);
        initMap.put("taz", R.raw.audio_taz);
        initMap.put("teb", R.raw.audio_teb);
        initMap.put("teF", R.raw.audio_tef);
        initMap.put("teG", R.raw.audio_teg);
        initMap.put("teH", R.raw.audio_teh);
        initMap.put("tej", R.raw.audio_tej);
        initMap.put("tel", R.raw.audio_tel);
        initMap.put("tem", R.raw.audio_tem);
        initMap.put("ten", R.raw.audio_ten);
        initMap.put("tep", R.raw.audio_tep);
        initMap.put("teq", R.raw.audio_teq);
        initMap.put("ter", R.raw.audio_ter);
        initMap.put("teS", R.raw.audio_tes);
        initMap.put("tet", R.raw.audio_tet);
        initMap.put("tev", R.raw.audio_tev);
        initMap.put("tex", R.raw.audio_tex);
        initMap.put("tey", R.raw.audio_tey);
        initMap.put("teyz", R.raw.audio_teyz);
        initMap.put("tez", R.raw.audio_tez);
        initMap.put("tIb", R.raw.audio_tib);
        initMap.put("tIC", R.raw.audio_tic);
        initMap.put("tIF", R.raw.audio_tif);
        initMap.put("tIG", R.raw.audio_tig);
        initMap.put("tIH", R.raw.audio_tih);
        initMap.put("tIj", R.raw.audio_tij);
        initMap.put("tIQ", R.raw.audio_tik);
        initMap.put("tIl", R.raw.audio_til);
        initMap.put("tIm", R.raw.audio_tim);
        initMap.put("tIn", R.raw.audio_tin);
        initMap.put("tIq", R.raw.audio_tiq);
        initMap.put("tIqz", R.raw.audio_tiqz);
        initMap.put("tIr", R.raw.audio_tir);
        initMap.put("tIS", R.raw.audio_tis);
        initMap.put("tIv", R.raw.audio_tiv);
        initMap.put("tIw", R.raw.audio_tiw);
        initMap.put("tIy", R.raw.audio_tiy);
        initMap.put("tIz", R.raw.audio_tiz);
        initMap.put("tob", R.raw.audio_tob);
        initMap.put("toC", R.raw.audio_toc);
        initMap.put("toD", R.raw.audio_tod);
        initMap.put("toF", R.raw.audio_tof);
        initMap.put("toG", R.raw.audio_tog);
        initMap.put("toH", R.raw.audio_toh);
        initMap.put("toj", R.raw.audio_toj);
        initMap.put("toQ", R.raw.audio_tok);
        initMap.put("ton", R.raw.audio_ton);
        initMap.put("top", R.raw.audio_top);
        initMap.put("toq", R.raw.audio_toq);
        initMap.put("tor", R.raw.audio_tor);
        initMap.put("torG", R.raw.audio_torg);
        initMap.put("toS", R.raw.audio_tos);
        initMap.put("tox", R.raw.audio_tox);
        initMap.put("toyz", R.raw.audio_toyz);
        initMap.put("toz", R.raw.audio_toz);
        initMap.put("tuC", R.raw.audio_tuc);
        initMap.put("tuD", R.raw.audio_tud);
        initMap.put("tuF", R.raw.audio_tuf);
        initMap.put("tuG", R.raw.audio_tug);
        initMap.put("tuH", R.raw.audio_tuh);
        initMap.put("tuj", R.raw.audio_tuj);
        initMap.put("tuQ", R.raw.audio_tuk);
        initMap.put("tul", R.raw.audio_tul);
        initMap.put("tum", R.raw.audio_tum);
        initMap.put("tun", R.raw.audio_tun);
        initMap.put("tup", R.raw.audio_tup);
        initMap.put("tuq", R.raw.audio_tuq);
        initMap.put("tur", R.raw.audio_tur);
        initMap.put("turn", R.raw.audio_turn);
        initMap.put("tuS", R.raw.audio_tus);
        initMap.put("tut", R.raw.audio_tut);
        initMap.put("tuv", R.raw.audio_tuv);
        initMap.put("tux", R.raw.audio_tux);
        initMap.put("tuy", R.raw.audio_tuy);
        initMap.put("tuyz", R.raw.audio_tuyz);
        initMap.put("tuz", R.raw.audio_tuz);
        initMap.put("vab", R.raw.audio_vab);
        initMap.put("vaD", R.raw.audio_vad);
        initMap.put("vaF", R.raw.audio_vaf);
        initMap.put("vaG", R.raw.audio_vag);
        initMap.put("vaH", R.raw.audio_vah);
        initMap.put("vaj", R.raw.audio_vaj);
        initMap.put("vaQ", R.raw.audio_vak);
        initMap.put("val", R.raw.audio_val);
        initMap.put("vam", R.raw.audio_vam);
        initMap.put("van", R.raw.audio_van);
        initMap.put("vaq", R.raw.audio_vaq);
        initMap.put("var", R.raw.audio_var);
        initMap.put("varG", R.raw.audio_varg);
        initMap.put("vaS", R.raw.audio_vas);
        initMap.put("vat", R.raw.audio_vat);
        initMap.put("vav", R.raw.audio_vav);
        initMap.put("vax", R.raw.audio_vax);
        initMap.put("vay", R.raw.audio_vay);
        initMap.put("vayz", R.raw.audio_vayz);
        initMap.put("vaz", R.raw.audio_vaz);
        initMap.put("veb", R.raw.audio_veb);
        initMap.put("veD", R.raw.audio_ved);
        initMap.put("veF", R.raw.audio_vef);
        initMap.put("veG", R.raw.audio_veg);
        initMap.put("veH", R.raw.audio_veh);
        initMap.put("veQ", R.raw.audio_vek);
        initMap.put("vel", R.raw.audio_vel);
        initMap.put("vem", R.raw.audio_vem);
        initMap.put("ven", R.raw.audio_ven);
        initMap.put("vep", R.raw.audio_vep);
        initMap.put("veq", R.raw.audio_veq);
        initMap.put("ver", R.raw.audio_ver);
        initMap.put("verG", R.raw.audio_verg);
        initMap.put("veS", R.raw.audio_ves);
        initMap.put("vet", R.raw.audio_vet);
        initMap.put("vev", R.raw.audio_vev);
        initMap.put("vex", R.raw.audio_vex);
        initMap.put("vey", R.raw.audio_vey);
        initMap.put("veyz", R.raw.audio_veyz);
        initMap.put("vez", R.raw.audio_vez);
        initMap.put("vIb", R.raw.audio_vib);
        initMap.put("vID", R.raw.audio_vid);
        initMap.put("vIF", R.raw.audio_vif);
        initMap.put("vIG", R.raw.audio_vig);
        initMap.put("vIH", R.raw.audio_vih);
        initMap.put("vIj", R.raw.audio_vij);
        initMap.put("vIl", R.raw.audio_vil);
        initMap.put("vIn", R.raw.audio_vin);
        initMap.put("vIp", R.raw.audio_vip);
        initMap.put("vIq", R.raw.audio_viq);
        initMap.put("vIr", R.raw.audio_vir);
        initMap.put("vIS", R.raw.audio_vis);
        initMap.put("vIt", R.raw.audio_vit);
        initMap.put("vIx", R.raw.audio_vix);
        initMap.put("vIy", R.raw.audio_viy);
        initMap.put("vIz", R.raw.audio_viz);
        initMap.put("vob", R.raw.audio_vob);
        initMap.put("voD", R.raw.audio_vod);
        initMap.put("voF", R.raw.audio_vof);
        initMap.put("voG", R.raw.audio_vog);
        initMap.put("voH", R.raw.audio_voh);
        initMap.put("voQ", R.raw.audio_vok);
        initMap.put("vol", R.raw.audio_vol);
        initMap.put("von", R.raw.audio_von);
        initMap.put("voq", R.raw.audio_voq);
        initMap.put("vor", R.raw.audio_vor);
        initMap.put("vorG", R.raw.audio_vorg);
        initMap.put("voS", R.raw.audio_vos);
        initMap.put("voy", R.raw.audio_voy);
        initMap.put("voyz", R.raw.audio_voyz);
        initMap.put("voz", R.raw.audio_voz);
        initMap.put("vub", R.raw.audio_vub);
        initMap.put("vuD", R.raw.audio_vud);
        initMap.put("vuF", R.raw.audio_vuf);
        initMap.put("vuj", R.raw.audio_vuj);
        initMap.put("vuQ", R.raw.audio_vuk);
        initMap.put("vul", R.raw.audio_vul);
        initMap.put("vum", R.raw.audio_vum);
        initMap.put("vun", R.raw.audio_vun);
        initMap.put("vup", R.raw.audio_vup);
        initMap.put("vur", R.raw.audio_vur);
        initMap.put("vuS", R.raw.audio_vus);
        initMap.put("vut", R.raw.audio_vut);
        initMap.put("vuv", R.raw.audio_vuv);
        initMap.put("vuy", R.raw.audio_vuy);
        initMap.put("vuz", R.raw.audio_vuz);
        initMap.put("wab", R.raw.audio_wab);
        initMap.put("waG", R.raw.audio_wag);
        initMap.put("waH", R.raw.audio_wah);
        initMap.put("waQ", R.raw.audio_wak);
        initMap.put("wal", R.raw.audio_wal);
        initMap.put("wam", R.raw.audio_wam);
        initMap.put("wan", R.raw.audio_wan);
        initMap.put("waq", R.raw.audio_waq);
        initMap.put("war", R.raw.audio_war);
        initMap.put("warG", R.raw.audio_warg);
        initMap.put("waS", R.raw.audio_was);
        initMap.put("wat", R.raw.audio_wat);
        initMap.put("wav", R.raw.audio_wav);
        initMap.put("wawz", R.raw.audio_wawz);
        initMap.put("wax", R.raw.audio_wax);
        initMap.put("way", R.raw.audio_way);
        initMap.put("wayz", R.raw.audio_wayz);
        initMap.put("waz", R.raw.audio_waz);
        initMap.put("web", R.raw.audio_web);
        initMap.put("weC", R.raw.audio_wec);
        initMap.put("weD", R.raw.audio_wed);
        initMap.put("weG", R.raw.audio_weg);
        initMap.put("weH", R.raw.audio_weh);
        initMap.put("wej", R.raw.audio_wej);
        initMap.put("weQ", R.raw.audio_wek);
        initMap.put("wel", R.raw.audio_wel);
        initMap.put("wem", R.raw.audio_wem);
        initMap.put("wen", R.raw.audio_wen);
        initMap.put("wep", R.raw.audio_wep);
        initMap.put("weq", R.raw.audio_weq);
        initMap.put("wer", R.raw.audio_wer);
        initMap.put("weS", R.raw.audio_wes);
        initMap.put("wev", R.raw.audio_wev);
        initMap.put("wew", R.raw.audio_wew);
        initMap.put("wey", R.raw.audio_wey);
        initMap.put("wez", R.raw.audio_wez);
        initMap.put("wIb", R.raw.audio_wib);
        initMap.put("wIC", R.raw.audio_wic);
        initMap.put("wID", R.raw.audio_wid);
        initMap.put("wIG", R.raw.audio_wig);
        initMap.put("wIH", R.raw.audio_wih);
        initMap.put("wIj", R.raw.audio_wij);
        initMap.put("wIl", R.raw.audio_wil);
        initMap.put("wIn", R.raw.audio_win);
        initMap.put("wIS", R.raw.audio_wis);
        initMap.put("wIv", R.raw.audio_wiv);
        initMap.put("wIx", R.raw.audio_wix);
        initMap.put("wIy", R.raw.audio_wiy);
        initMap.put("wIz", R.raw.audio_wiz);
        initMap.put("wob", R.raw.audio_wob);
        initMap.put("woC", R.raw.audio_woc);
        initMap.put("woD", R.raw.audio_wod);
        initMap.put("woG", R.raw.audio_wog);
        initMap.put("woH", R.raw.audio_woh);
        initMap.put("woj", R.raw.audio_woj);
        initMap.put("woQ", R.raw.audio_wok);
        initMap.put("wol", R.raw.audio_wol);
        initMap.put("wom", R.raw.audio_wom);
        initMap.put("woq", R.raw.audio_woq);
        initMap.put("wor", R.raw.audio_wor);
        initMap.put("woS", R.raw.audio_wos);
        initMap.put("wot", R.raw.audio_wot);
        initMap.put("wov", R.raw.audio_wov);
        initMap.put("woz", R.raw.audio_woz);
        initMap.put("wuD", R.raw.audio_wud);
        initMap.put("wuQ", R.raw.audio_wuk);
        initMap.put("wun", R.raw.audio_wun);
        initMap.put("wup", R.raw.audio_wup);
        initMap.put("wuq", R.raw.audio_wuq);
        initMap.put("wuS", R.raw.audio_wus);
        initMap.put("wuv", R.raw.audio_wuv);
        initMap.put("wux", R.raw.audio_wux);
        initMap.put("xab", R.raw.audio_xab);
        initMap.put("xaC", R.raw.audio_xac);
        initMap.put("xaG", R.raw.audio_xag);
        initMap.put("xaQ", R.raw.audio_xak);
        initMap.put("xam", R.raw.audio_xam);
        initMap.put("xap", R.raw.audio_xap);
        initMap.put("xaq", R.raw.audio_xaq);
        initMap.put("xarG", R.raw.audio_xarg);
        initMap.put("xaS", R.raw.audio_xas);
        initMap.put("xat", R.raw.audio_xat);
        initMap.put("xawz", R.raw.audio_xawz);
        initMap.put("xax", R.raw.audio_xax);
        initMap.put("xay", R.raw.audio_xay);
        initMap.put("xayz", R.raw.audio_xayz);
        initMap.put("xaz", R.raw.audio_xaz);
        initMap.put("xeD", R.raw.audio_xed);
        initMap.put("xeF", R.raw.audio_xef);
        initMap.put("xeG", R.raw.audio_xeg);
        initMap.put("xeH", R.raw.audio_xeh);
        initMap.put("xej", R.raw.audio_xej);
        initMap.put("xep", R.raw.audio_xep);
        initMap.put("xer", R.raw.audio_xer);
        initMap.put("xev", R.raw.audio_xev);
        initMap.put("xex", R.raw.audio_xex);
        initMap.put("xez", R.raw.audio_xez);
        initMap.put("xIb", R.raw.audio_xib);
        initMap.put("xIC", R.raw.audio_xic);
        initMap.put("xIF", R.raw.audio_xif);
        initMap.put("xIH", R.raw.audio_xih);
        initMap.put("xIj", R.raw.audio_xij);
        initMap.put("xIl", R.raw.audio_xil);
        initMap.put("xIm", R.raw.audio_xim);
        initMap.put("xIn", R.raw.audio_xin);
        initMap.put("xIq", R.raw.audio_xiq);
        initMap.put("xIS", R.raw.audio_xis);
        initMap.put("xIv", R.raw.audio_xiv);
        initMap.put("xIz", R.raw.audio_xiz);
        initMap.put("xob", R.raw.audio_xob);
        initMap.put("xoC", R.raw.audio_xoc);
        initMap.put("xoD", R.raw.audio_xod);
        initMap.put("xoF", R.raw.audio_xof);
        initMap.put("xoG", R.raw.audio_xog);
        initMap.put("xoj", R.raw.audio_xoj);
        initMap.put("xoQ", R.raw.audio_xok);
        initMap.put("xol", R.raw.audio_xol);
        initMap.put("xom", R.raw.audio_xom);
        initMap.put("xon", R.raw.audio_xon);
        initMap.put("xop", R.raw.audio_xop);
        initMap.put("xorG", R.raw.audio_xorg);
        initMap.put("xoS", R.raw.audio_xos);
        initMap.put("xot", R.raw.audio_xot);
        initMap.put("xov", R.raw.audio_xov);
        initMap.put("xoy", R.raw.audio_xoy);
        initMap.put("xoyz", R.raw.audio_xoyz);
        initMap.put("xoz", R.raw.audio_xoz);
        initMap.put("xuC", R.raw.audio_xuc);
        initMap.put("xuD", R.raw.audio_xud);
        initMap.put("xuH", R.raw.audio_xuh);
        initMap.put("xuQ", R.raw.audio_xuk);
        initMap.put("xup", R.raw.audio_xup);
        initMap.put("xux", R.raw.audio_xux);
        initMap.put("xuz", R.raw.audio_xuz);
        initMap.put("yab", R.raw.audio_yab);
        initMap.put("yaC", R.raw.audio_yac);
        initMap.put("yaD", R.raw.audio_yad);
        initMap.put("yaF", R.raw.audio_yaf);
        initMap.put("yaG", R.raw.audio_yag);
        initMap.put("yaH", R.raw.audio_yah);
        initMap.put("yaj", R.raw.audio_yaj);
        initMap.put("yam", R.raw.audio_yam);
        initMap.put("yan", R.raw.audio_yan);
        initMap.put("yap", R.raw.audio_yap);
        initMap.put("yar", R.raw.audio_yar);
        initMap.put("yaS", R.raw.audio_yas);
        initMap.put("yat", R.raw.audio_yat);
        initMap.put("yav", R.raw.audio_yav);
        initMap.put("yax", R.raw.audio_yax);
        initMap.put("yay", R.raw.audio_yay);
        initMap.put("yayz", R.raw.audio_yayz);
        initMap.put("yaz", R.raw.audio_yaz);
        initMap.put("yeb", R.raw.audio_yeb);
        initMap.put("yeG", R.raw.audio_yeg);
        initMap.put("yej", R.raw.audio_yej);
        initMap.put("yem", R.raw.audio_yem);
        initMap.put("yen", R.raw.audio_yen);
        initMap.put("yep", R.raw.audio_yep);
        initMap.put("yeq", R.raw.audio_yeq);
        initMap.put("yer", R.raw.audio_yer);
        initMap.put("yerG", R.raw.audio_yerg);
        initMap.put("yev", R.raw.audio_yev);
        initMap.put("yIb", R.raw.audio_yib);
        initMap.put("yIC", R.raw.audio_yic);
        initMap.put("yIH", R.raw.audio_yih);
        initMap.put("yIQ", R.raw.audio_yik);
        initMap.put("yIm", R.raw.audio_yim);
        initMap.put("yIn", R.raw.audio_yin);
        initMap.put("yIr", R.raw.audio_yir);
        initMap.put("yIS", R.raw.audio_yis);
        initMap.put("yIt", R.raw.audio_yit);
        initMap.put("yIv", R.raw.audio_yiv);
        initMap.put("yIz", R.raw.audio_yiz);
        initMap.put("yob", R.raw.audio_yob);
        initMap.put("yoD", R.raw.audio_yod);
        initMap.put("yoF", R.raw.audio_yof);
        initMap.put("yoH", R.raw.audio_yoh);
        initMap.put("yoj", R.raw.audio_yoj);
        initMap.put("yol", R.raw.audio_yol);
        initMap.put("yon", R.raw.audio_yon);
        initMap.put("yop", R.raw.audio_yop);
        initMap.put("yoq", R.raw.audio_yoq);
        initMap.put("yor", R.raw.audio_yor);
        initMap.put("yorG", R.raw.audio_yorg);
        initMap.put("yoS", R.raw.audio_yos);
        initMap.put("yot", R.raw.audio_yot);
        initMap.put("yov", R.raw.audio_yov);
        initMap.put("yox", R.raw.audio_yox);
        initMap.put("yoy", R.raw.audio_yoy);
        initMap.put("yoz", R.raw.audio_yoz);
        initMap.put("yub", R.raw.audio_yub);
        initMap.put("yuC", R.raw.audio_yuc);
        initMap.put("yuD", R.raw.audio_yud);
        initMap.put("yuG", R.raw.audio_yug);
        initMap.put("yuQ", R.raw.audio_yuk);
        initMap.put("yul", R.raw.audio_yul);
        initMap.put("yum", R.raw.audio_yum);
        initMap.put("yup", R.raw.audio_yup);
        initMap.put("yuq", R.raw.audio_yuq);
        initMap.put("yur", R.raw.audio_yur);
        initMap.put("yuS", R.raw.audio_yus);
        initMap.put("yut", R.raw.audio_yut);
        initMap.put("yuv", R.raw.audio_yuv);
        initMap.put("yuz", R.raw.audio_yuz);
        initMap.put("zab", R.raw.audio_zab);
        initMap.put("zaC", R.raw.audio_zac);
        initMap.put("zaD", R.raw.audio_zad);
        initMap.put("zaF", R.raw.audio_zaf);
        initMap.put("zaG", R.raw.audio_zag);
        initMap.put("zaH", R.raw.audio_zah);
        initMap.put("zaj", R.raw.audio_zaj);
        initMap.put("zaQ", R.raw.audio_zak);
        initMap.put("zal", R.raw.audio_zal);
        initMap.put("zam", R.raw.audio_zam);
        initMap.put("zan", R.raw.audio_zan);
        initMap.put("zap", R.raw.audio_zap);
        initMap.put("zaq", R.raw.audio_zaq);
        initMap.put("zar", R.raw.audio_zar);
        initMap.put("zarG", R.raw.audio_zarg);
        initMap.put("zaS", R.raw.audio_zas);
        initMap.put("zat", R.raw.audio_zat);
        initMap.put("zav", R.raw.audio_zav);
        initMap.put("zaw", R.raw.audio_zaw);
        initMap.put("zawz", R.raw.audio_zawz);
        initMap.put("zax", R.raw.audio_zax);
        initMap.put("zayz", R.raw.audio_zayz);
        initMap.put("zaz", R.raw.audio_zaz);
        initMap.put("zeb", R.raw.audio_zeb);
        initMap.put("zeC", R.raw.audio_zec);
        initMap.put("zeD", R.raw.audio_zed);
        initMap.put("zeF", R.raw.audio_zef);
        initMap.put("zeG", R.raw.audio_zeg);
        initMap.put("zeH", R.raw.audio_zeh);
        initMap.put("zej", R.raw.audio_zej);
        initMap.put("zeQ", R.raw.audio_zek);
        initMap.put("zel", R.raw.audio_zel);
        initMap.put("zem", R.raw.audio_zem);
        initMap.put("zen", R.raw.audio_zen);
        initMap.put("zep", R.raw.audio_zep);
        initMap.put("zeq", R.raw.audio_zeq);
        initMap.put("zer", R.raw.audio_zer);
        initMap.put("zeS", R.raw.audio_zes);
        initMap.put("zet", R.raw.audio_zet);
        initMap.put("zev", R.raw.audio_zev);
        initMap.put("zew", R.raw.audio_zew);
        initMap.put("zex", R.raw.audio_zex);
        initMap.put("zey", R.raw.audio_zey);
        initMap.put("zez", R.raw.audio_zez);
        initMap.put("zIb", R.raw.audio_zib);
        initMap.put("zID", R.raw.audio_zid);
        initMap.put("zIG", R.raw.audio_zig);
        initMap.put("zIH", R.raw.audio_zih);
        initMap.put("zIj", R.raw.audio_zij);
        initMap.put("zIQ", R.raw.audio_zik);
        initMap.put("zIl", R.raw.audio_zil);
        initMap.put("zIm", R.raw.audio_zim);
        initMap.put("zIn", R.raw.audio_zin);
        initMap.put("zIp", R.raw.audio_zip);
        initMap.put("zIq", R.raw.audio_ziq);
        initMap.put("zIr", R.raw.audio_zir);
        initMap.put("zIrG", R.raw.audio_zirg);
        initMap.put("zIS", R.raw.audio_zis);
        initMap.put("zIt", R.raw.audio_zit);
        initMap.put("zIv", R.raw.audio_ziv);
        initMap.put("zIw", R.raw.audio_ziw);
        initMap.put("zIx", R.raw.audio_zix);
        initMap.put("zIz", R.raw.audio_ziz);
        initMap.put("zob", R.raw.audio_zob);
        initMap.put("zoC", R.raw.audio_zoc);
        initMap.put("zoD", R.raw.audio_zod);
        initMap.put("zoF", R.raw.audio_zof);
        initMap.put("zoG", R.raw.audio_zog);
        initMap.put("zoH", R.raw.audio_zoh);
        initMap.put("zoj", R.raw.audio_zoj);
        initMap.put("zoQ", R.raw.audio_zok);
        initMap.put("zol", R.raw.audio_zol);
        initMap.put("zom", R.raw.audio_zom);
        initMap.put("zon", R.raw.audio_zon);
        initMap.put("zop", R.raw.audio_zop);
        initMap.put("zoq", R.raw.audio_zoq);
        initMap.put("zor", R.raw.audio_zor);
        initMap.put("zoS", R.raw.audio_zos);
        initMap.put("zot", R.raw.audio_zot);
        initMap.put("zov", R.raw.audio_zov);
        initMap.put("zox", R.raw.audio_zox);
        initMap.put("zoy", R.raw.audio_zoy);
        initMap.put("zoyz", R.raw.audio_zoyz);
        initMap.put("zoz", R.raw.audio_zoz);
        initMap.put("zub", R.raw.audio_zub);
        initMap.put("zuC", R.raw.audio_zuc);
        initMap.put("zuD", R.raw.audio_zud);
        initMap.put("zuG", R.raw.audio_zug);
        initMap.put("zuH", R.raw.audio_zuh);
        initMap.put("zuj", R.raw.audio_zuj);
        initMap.put("zuQ", R.raw.audio_zuk);
        initMap.put("zul", R.raw.audio_zul);
        initMap.put("zum", R.raw.audio_zum);
        initMap.put("zun", R.raw.audio_zun);
        initMap.put("zup", R.raw.audio_zup);
        initMap.put("zur", R.raw.audio_zur);
        initMap.put("zurG", R.raw.audio_zurg);
        initMap.put("zuS", R.raw.audio_zus);
        initMap.put("zut", R.raw.audio_zut);
        initMap.put("zux", R.raw.audio_zux);
        initMap.put("zuy", R.raw.audio_zuy);
        initMap.put("zuyz", R.raw.audio_zuyz);
        initMap.put("zuz", R.raw.audio_zuz);
        // END: MAIN_SYLLABLE_TO_AUDIO_MAP
        // THIS IS AUTOGENERATED CODE. DO NOT EDIT ABOVE THIS LINE.

        MAIN_SYLLABLE_TO_AUDIO_MAP = Collections.unmodifiableMap(initMap);
    }

    @Override
    public void onCreate() {
        super.onCreate();
        // We load the default language when we start up. This isn't strictly
        // required though, it can always be loaded lazily on the first call to
        // onLoadLanguage or onSynthesizeText. There is a tradeoff between
        // memory usage and the latency of the first call.
        onLoadLanguage("tlh", "CAN", "");
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
    }

    @Override
    protected String[] onGetLanguage() {
        // Note that mCurrentLanguage is volatile because this can be called from
        // multiple threads.
        return mCurrentLanguage;
    }

    @Override
    protected int onIsLanguageAvailable(String lang, String country, String variant) {
        // The return value of this method must be consistent with onLoadLanguage and onLoadVoice.
        Log.d(TAG, "lang: " + lang);
        Log.d(TAG, "country: " + country);
        Log.d(TAG, "variant: " + variant);

        // The speech synthesizer supports only Klingon.
        if ("tlh".equals(lang)) {
            // We support two specific Klingon dialects, the Canadian Klingon dialect
            // and the American Klingon dialect.
            if ("USA".equals(country) || "CAN".equals(country)) {
                // If the engine supported a specific variant, we would have
                // something like.
                //
                // if ("Sa'Qej".equals(variant)) {
                //     return TextToSpeech.LANG_COUNTRY_VAR_AVAILABLE;
                // }
                return TextToSpeech.LANG_COUNTRY_AVAILABLE;
            }

            // We support the language, but not the country.
            return TextToSpeech.LANG_AVAILABLE;
        }

        return TextToSpeech.LANG_NOT_SUPPORTED;
    }

    /*
     * Note that this method is synchronized, as is onSynthesizeText because
     * onLoadLanguage can be called from multiple threads (while onSynthesizeText
     * is always called from a single thread only).
     */
    @Override
    protected synchronized int onLoadLanguage(String lang, String country, String variant) {
        final int isLanguageAvailable = onIsLanguageAvailable(lang, country, variant);

        if (isLanguageAvailable == TextToSpeech.LANG_NOT_SUPPORTED) {
            return isLanguageAvailable;
        }

        String loadCountry = country;
        if (isLanguageAvailable == TextToSpeech.LANG_AVAILABLE) {
            loadCountry = "USA";
        }

        // If we've already loaded the requested language, we can return early.
        if (mCurrentLanguage != null) {
            if (mCurrentLanguage[0].equals(lang) && mCurrentLanguage[1].equals(country)) {
                return isLanguageAvailable;
            }
        }

        mCurrentLanguage = new String[] { lang, loadCountry, "" };

        // The return value here must be consistent with onIsLanguageAvailable and onLoadVoice.
        return isLanguageAvailable;
    }

    @Override
    protected void onStop() {
        mStopRequested = true;
    }

    // Helper method to prepare a MediaPlayer with the audio and add it to the
    // front of the play list. Preparing this way helps to reduce any audio gap.
    private void prependSyllableToList(Integer resId) {
        if (resId.intValue() != 0) {
            // Alternatively:
            //   MediaPlayer mp = new MediaPlayer();
            //   mp.setDataSource(filename);
            //   mp.prepare();
            MediaPlayer mp = MediaPlayer.create(this, resId.intValue());

            // Chain this MediaPlayer (if it was successfully created) to the
            // front of the existing one (if any).
            if (mp != null) {
                mp.setNextMediaPlayer(mMediaPlayer);
                mp.setOnCompletionListener(this);
                mMediaPlayer = mp;
            }
        }
    }

    private void prependCoughToList() {
        prependSyllableToList(R.raw.audio_cough);
    }

    @Override
    protected synchronized void onSynthesizeText(SynthesisRequest request,
            SynthesisCallback callback) {
        // Note that we call onLoadLanguage here since there is no guarantee
        // that there would have been a prior call to this function.
        int load = onLoadLanguage(request.getLanguage(), request.getCountry(),
                request.getVariant());

        // We might get requests for a language we don't support - in which case
        // we error out early before wasting too much time.
        if (load == TextToSpeech.LANG_NOT_SUPPORTED) {
            callback.error();
            return;
        }

        // At this point, we have loaded the language we need for synthesis and
        // it is guaranteed that we support it so we proceed with synthesis.

        // When Android asks for a sample spoken sentence, it requests the text
        // "This is an example of speech synthesis". However, we just look for
        // the word "example", since it's not guaranteed that this string won't
        // change. We replace the request with the Klingon sentence:
        // {QIch luchenmoHlu'ta'bogh 'aghlu'meH chovnatlhvam noblu'}.
        String requestedText = request.getText();
        String condensedText;
        if (requestedText.toLowerCase().contains("example")) {
          condensedText = "QIC luCenmoHluztazboG zaGluzmeH Covnaxvam nobluz";
        } else {
          condensedText = condenseKlingonDiTrigraphs(requestedText);
        }
        // We construct a list of syllables to be played.
        Log.d(TAG, "---\n");
        Log.d(TAG, "condensedText: \"" + condensedText + "\"");
        boolean isFinalSyllable = true;
        while (!condensedText.equals("")) {
            // Syllables in the main syllable map must have length 3 or 4 (CVC or CVCC).
            boolean foundMatch = false;
            for (int len = 3; len <= 4; len++) {
                if (condensedText.length() < len) {
                    // Remaining text is too short to have a complete syllable.
                    break;
                }
                String tail = condensedText.substring(condensedText.length() - len);
                Integer resId = MAIN_SYLLABLE_TO_AUDIO_MAP.get(tail);
                if (resId != null) {
                    prependSyllableToList(resId);
                    condensedText = condensedText.substring(0, condensedText.length() - len);

                    // The next match won't be the final syllable in a word.
                    isFinalSyllable = false;
                    foundMatch = true;
                    Log.d(TAG, "Matched tail: {" + tail + "}");
                    break;
                }
            }
            if (!foundMatch) {
                String syllable = removeTailSyllable(condensedText);
                if (!syllable.equals("")) {
                    condensedText = condensedText.substring(0, condensedText.length() - syllable.length());
                    String vowel = getSyllableVowel(syllable);
                    int vowelIndex = syllable.indexOf(vowel);

                    // Split the syllable into front and back.
                    String syllableBack = syllable.substring(vowelIndex);
                    String syllableFront = syllable.substring(0, vowelIndex + vowel.length());
                    Integer backResId = BACK_HALF_SYLLABLE_TO_AUDIO_MAP.get("-" + syllableBack);
                    Integer frontResId = FRONT_HALF_SYLLABLE_TO_AUDIO_MAP.get(syllableFront + "-");

                    // If the syllable is CV, then it is a short syllable. If it is CV-, then it is an unattached prefix.
                    boolean isShortSyllable = syllableBack.equals(vowel);
                    boolean isUnattachedPrefix = syllableBack.equals(vowel + "-");
                    Log.d(TAG, "Syllable: {" + syllable + "}");
                    Log.d(TAG, "Syllable front: {" + syllableFront + "}");
                    Log.d(TAG, "Syllable back: {" + syllableBack + "}");
                    Log.d(TAG, "Vowel: {" + vowel + "}");
                    Log.d(TAG, "isShortSyllable: {" + isShortSyllable + "}");
                    Log.d(TAG, "isUnattachedPrefix: {" + isUnattachedPrefix + "}");
                    Log.d(TAG, "isFinalSyllable: {" + isFinalSyllable + "}");
                    if (isShortSyllable && !isFinalSyllable || isUnattachedPrefix) {
                        // If it's a short syllable but not the final syllable, then truncate the vowel.
                        // This is either an attached prefix, part of a multisyllabic word, or a CV verb attached to a suffix.
                        // The audio for {bo-} takes precedence over the audio for {bo} if it's the beginning part of a word.
                        // Also treat unattached prefixes the same way.
                        if (frontResId != null) {
                            prependSyllableToList(frontResId);
                            Log.d(TAG, "Matched syllable: {" + syllableFront + "-}");
                        } else {
                            prependCoughToList();
                        }
                    } else {
                        // Either it's not short, or it's short and final. So play audio for the
                        // whole syllable.
                        Integer resId = null;
                        if (isShortSyllable) {
                            // Try to get audio of the full short syllable in the map of short syllables.
                            resId = SHORT_SYLLABLE_TO_AUDIO_MAP.get(syllable);
                        }
                        if (resId != null) {
                            // We have a full short syllable, so play it. Ex: {bo}.
                            prependSyllableToList(resId);
                            Log.d(TAG, "Matched syllable: {" + syllable + "}");
                        } else {
                            // If the syllable isn't short, or it is short and we've failed to get
                            // audio for the full short syllable, then add both the front and the
                            // back.
                            boolean coughed = false;
                            if (backResId != null) {
                                prependSyllableToList(backResId);
                            } else {
                                String backConsonants = syllableBack.substring(vowel.length());
                                if (backConsonants.length() == 1) {
                                  // This should be avoided, but if there is no choice, say the
                                  // consonant by itself. It won't sound smooth.
                                  prependSyllableToList(getResIdForFallbackChar(backConsonants.charAt(0)));
                                } else {
                                  // There was a consonant cluster (-rgh, -w', -y'), can't fake it.
                                  prependCoughToList();
                                  coughed = true;
                                }
                            }
                            if (frontResId != null) {
                                prependSyllableToList(frontResId);
                            } else if (!coughed) {
                                // Cough only once if both parts are missing.
                                prependCoughToList();
                            }
                            Log.d(TAG, "Matched syllable: {" + syllableFront + "-" + syllableBack + "}");
                        }
                    }

                    // Now the next match won't be the final syllable in a word.
                    isFinalSyllable = false;
                    foundMatch = true;
                }
            }
            if (!foundMatch) {
                // No match for a complete syllable. Use a fallback sound. This should be avoided if possible.
                char value = condensedText.charAt(condensedText.length() - 1);
                condensedText = condensedText.substring(0, condensedText.length() - 1);
                prependSyllableToList(getResIdForFallbackChar(value));
                Log.d(TAG, "Stripped char: \"" + value + "\"");

                // The next match will be considered the final syllable in a new word.
                isFinalSyllable = true;
            }
        }
        beginPlayback();

        // Alright, we're done with our synthesis - yay!
        callback.done();
    }

    private static boolean isSimpleVowel(char value) {
        final String aeIou = "aeIou";
        return aeIou.indexOf(value) != -1;
    }

    // Attempt to remove a syllable from the end of a given text and return it. Return empty string
    // if unsuccessful. Both input and output are in condensed format.
    private static String removeTailSyllable(String input) {
        // Syllables can have the following forms, where C is a consonant, and V is a vowel:
        //   CV
        //   CVC   (excluding {ow} and {uw})
        //   CVrgh
        //   CVw'  (excluding {ow'} and {uw'})
        //   CVy'
        // Log.d(TAG, "removeTailSyllable from: {" + input + "}");

        String remainingText = input;
        String tail = "";

        // Deal with the ending.
        if (remainingText.length() > 3 && remainingText.endsWith("wz")) {
            // Ends in {w'}. Peak at the preceding vowel.
            char value = remainingText.charAt(remainingText.length() - 3);
            if (value == 'o' || value == 'u') {
                // Drop the "w".
                tail = "z";
            } else {
                tail = "wz";
            }
            // Remove the "wz", but leave the vowel.
            remainingText = remainingText.substring(0, remainingText.length() - 2);
        } else if (remainingText.length() > 2 && remainingText.endsWith("w")) {
            // Ends in {w}. Peak at the preceding vowel.
            char value = remainingText.charAt(remainingText.length() - 2);
            if (value == 'o' || value == 'u') {
                // Drop the "w".
                tail = "";
            } else {
                tail = "w";
            }
            // Remove the "w", but leave the vowel.
            remainingText = remainingText.substring(0, remainingText.length() - 1);
        } else if (remainingText.length() > 3 && remainingText.endsWith("yz")) {
            // Ends in {y'}.
            tail = "yz";
            remainingText = remainingText.substring(0, remainingText.length() - 2);
        } else if (remainingText.length() > 3 && remainingText.endsWith("rG")) {
            // Ends in {rgh}.
            tail = "rG";
            remainingText = remainingText.substring(0, remainingText.length() - 2);
        } else if (remainingText.length() > 2 && !isSimpleVowel(remainingText.charAt(remainingText.length() - 1))) {
            // Ends in something other than a vowel. Assume it's a consonant, unless it's a space.
            tail = remainingText.substring(remainingText.length() - 1);
            if (tail.equals(" ")) {
                // Not a valid final consonant.
                return "";
            }
            remainingText = remainingText.substring(0, remainingText.length() - 1);
        }
        // Log.d(TAG, "After ending: {" + remainingText + " / " + tail + "}");

        // Look for the vowel.
        if (remainingText.length() < 2 ||
            !isSimpleVowel(remainingText.charAt(remainingText.length() - 1))) {
            // Failed to extract a syllable from the tail.
            return "";
        }
        tail = remainingText.substring(remainingText.length() - 1) + tail;
        remainingText = remainingText.substring(0, remainingText.length() - 1);
        // Log.d(TAG, "After middle: {" + remainingText + " / " + tail + "}");

        // Look for the initial consonant.
        if (remainingText.length() < 1 ||
            isSimpleVowel(remainingText.charAt(remainingText.length() - 1))) {
            // Also a failure.
            return "";
        }
        tail = remainingText.substring(remainingText.length() - 1) + tail;
        remainingText = remainingText.substring(0, remainingText.length() - 1);
        // Log.d(TAG, "After beginning: {" + remainingText + " / " + tail + "}");

        return tail;
    }

    private static String getSyllableVowel(String syllable) {
        // Given a legitimate Klingon syllable, return its (possibly complex) vowel.
        // Note that "ow" and "uw" are not possible.
        String[] possibleVowels = {"aw", "ew", "Iw", "ay", "ey", "Iy", "oy", "uy", "a", "e", "I", "o", "u"};
        for (int i = 0; i < possibleVowels.length; ++i) {
            if (syllable.indexOf(possibleVowels[i]) != -1) {
                return possibleVowels[i];
            }
        }
        return "";
    }

    private static int getResIdForFallbackChar(char value) {
        switch(value) {
          case 'a':
            return R.raw.audio_a;
          case 'b':
            return R.raw.audio_b;
          case 'C': // {ch}
            return R.raw.audio_c;
          case 'D':
            return R.raw.audio_d;
          case 'e':
            return R.raw.audio_e;
          case 'G': // {gh}
            return R.raw.audio_g;
          case 'H':
            return R.raw.audio_h;
          case 'I':
            return R.raw.audio_i;
          case 'j':
            return R.raw.audio_j;
          case 'l':
            return R.raw.audio_l;
          case 'm':
            return R.raw.audio_m;
          case 'n':
            return R.raw.audio_n;
          case 'F': // {ng}
            return R.raw.audio_f;
          case 'o':
            return R.raw.audio_o;
          case 'p':
            return R.raw.audio_p;
          case 'q':
            return R.raw.audio_q;
          case 'Q':
            return R.raw.audio_k;
          case 'r':
            return R.raw.audio_r;
          case 'S':
            return R.raw.audio_s;
          case 't':
            return R.raw.audio_t;
          case 'x': // {tlh}
            return R.raw.audio_x;
          case 'u':
            return R.raw.audio_u;
          case 'v':
            return R.raw.audio_v;
          case 'w':
            return R.raw.audio_w;
          case 'y':
            return R.raw.audio_y;
          case 'z': // {'}
            return R.raw.audio_z;
          case ' ':
            return R.raw.audio_silence;
          default:
            // Note that 0 denotes an invalid resource ID in Android.
            return 0;
        }
    }

    /*
     * Condense {tlhIngan Hol} with a mapping that represents diagraphs and trigraphs as single characters.
     * Also replace {'} with "z" for ease of processing. The input is assumed to be proper Klingon orthography.
     */
    private static String condenseKlingonDiTrigraphs(String input) {
        return input.replaceAll("[^A-Za-z'\\-]+", " ")  // Strip all non-alphabetical characters (except {'} and "-").
                    .replaceAll("ch", "C")
                    .replaceAll("gh", "G")   // {gh} has to be done before {ng} so that {ngh} -> "nG" and not "Fh".
                    .replaceAll("ng", "F")
                    .replaceAll("tlh", "x")
                    .replaceAll("'", "z");
    }

    private void beginPlayback() {
        // Someone called onStop, end the current synthesis and return.
        // The mStopRequested variable will be reset at the beginning of the
        // next synthesis.
        //
        // In general, a call to onStop() should make a best effort attempt
        // to stop all processing for the *current* onSynthesizeText request (if
        // one is active).
        if (mStopRequested || mMediaPlayer == null) {
            return;
        }

        // This starts the chain of playback.
        mMediaPlayer.start();

        // It is important to set this to null here, since if onSynthesizeText
        // is called again, we don't want to chain the currently playing
        // syllables to the end of the new chain.
        mMediaPlayer = null;
    }

    public void onCompletion(MediaPlayer mp) {
        // Be sure to release the audio resources when playback is completed.
        // Log.d(TAG, "onCompletion called");
        // mp.reset();
        mp.release();
    }

    // This override is okay on 5.1.1 (API 22). It does nothing on 6.0.1 (API 23).
    // getVoices is only ever called on API 21 and above, so this will never be called when
    // android.speech.tts.Voice is unavailable.
    @Override
    @TargetApi(21)
    public List<Voice> onGetVoices() {
        // Work-around for https://github.com/De7vID/klingon-assistant/issues/132.
        List<Voice> list = new ArrayList<Voice>();
        list.add(new Voice("Klingon (Canada)", new Locale("tlh", "CAN"), 100, 100, false,
              new HashSet<String>()));
        return list;
    }

    @Override
    public int onLoadVoice(String name) {
        Log.d(TAG, "onLoadVoice: " + name);
        if (name.equals("Klingon (Canada)")) {
            // The return value here must be consistent with onLoadLanguage and
            // onIsLanguageAvailable.
            return TextToSpeech.LANG_COUNTRY_AVAILABLE;
        } else {
            return TextToSpeech.LANG_NOT_SUPPORTED;
        }
    }

    @Override
    public int onIsValidVoiceName(String name) {
        Log.d(TAG, "onIsValidVoiceName: " + name);
        if (name.equals("Klingon (Canada)")) {
            return TextToSpeech.SUCCESS;
        } else {
            return TextToSpeech.ERROR;
        }
    }

    // This override causes "tlh" not to be supported on 5.1.1.
    // It does nothing on 6.0.1.
    @Override
    public String onGetDefaultVoiceNameFor(String lang, String country, String variant) {
        // Work-around for https://github.com/De7vID/klingon-assistant/issues/132.
        if (lang.equals("tlh")) {
          return "Klingon (Canada)";
        }
        return super.onGetDefaultVoiceNameFor(lang, country, variant);
    }
}
