diff --git a/KlingonAssistant/AndroidManifest.xml b/KlingonAssistant/AndroidManifest.xml
index c259d51..15ae2e3 100644
--- a/KlingonAssistant/AndroidManifest.xml
+++ b/KlingonAssistant/AndroidManifest.xml
@@ -25,7 +25,7 @@
 
     <!-- Minimum Android version 2.1 (7), targeted version 4.4 (19). -->
     <!-- For TUTORIAL, minimum is version 4.0 (14). For TTS, it's 4.1 (16). -->
-    <uses-sdk android:minSdkVersion="16"
+    <uses-sdk android:minSdkVersion="7"
               android:targetSdkVersion="19"/>
     <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
     <supports-screens android:resizeable="true"
diff --git a/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/EntryActivity.java b/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/EntryActivity.java
index e5bdfbb..0504966 100644
--- a/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/EntryActivity.java
+++ b/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/EntryActivity.java
@@ -49,15 +49,15 @@ import android.support.v4.view.MenuItemCompat;
 import android.support.v7.widget.ShareActionProvider;
 
 // TTS:
-import android.speech.tts.TextToSpeech;
-import java.util.Locale;
+// import android.speech.tts.TextToSpeech;
+// import java.util.Locale;
 
 /**
  * Displays an entry and its definition.
  */
-public class EntryActivity extends BaseActivity
+public class EntryActivity extends BaseActivity {
 // TTS:
-    implements TextToSpeech.OnInitListener {
+//     implements TextToSpeech.OnInitListener {
 
   private static final String TAG = "EntryActivity";
 
@@ -69,10 +69,10 @@ public class EntryActivity extends BaseActivity
   private String mEntryName = null;
 
   // TTS:
-  /** The {@link TextToSpeech} used for speaking. **/
-  private TextToSpeech mTts;
-  private MenuItem mSpeakButton;
-  private boolean ttsInitialized = false;
+  //  The {@link TextToSpeech} used for speaking.
+  // private TextToSpeech mTts;
+  // private MenuItem mSpeakButton;
+  // private boolean ttsInitialized = false;
 
   @Override
   protected void onCreate(Bundle savedInstanceState) {
@@ -82,9 +82,9 @@ public class EntryActivity extends BaseActivity
     // Initialize text-to-speech. This is an asynchronous operation.
     // The OnInitListener (second argument) is called after initialization completes.
     // Log.d(TAG, "Initialising TTS");
-    mTts = new TextToSpeech(this,
-        this,  // TextToSpeech.OnInitListener
-        "org.tlhInganHol.android.klingonttsengine");  // Requires API 14.
+    // mTts = new TextToSpeech(this,
+    //     this,  // TextToSpeech.OnInitListener
+    //     "org.tlhInganHol.android.klingonttsengine");  // Requires API 14.
 
     setDrawerContentView(R.layout.entry);
     Resources resources = getResources();
@@ -416,10 +416,10 @@ public class EntryActivity extends BaseActivity
       // TTS:
       // Don't forget to shutdown!
       // Log.d(TAG, "Shutting down TTS");
-      if (mTts != null) {
-          mTts.stop();
-          mTts.shutdown();
-      }
+      // if (mTts != null) {
+      //     mTts.stop();
+      //     mTts.shutdown();
+      // }
       super.onDestroy();
   }
 
@@ -446,11 +446,11 @@ public class EntryActivity extends BaseActivity
     // TTS:
     // The button is disabled in the layout.
     // It will be enabled upon initialization of the TTS engine.
-    mSpeakButton = menu.findItem(R.id.speak);
-    if (ttsInitialized) {
-      // Log.d(TAG, "enabling TTS button in onCreateOptionsMenu");
-      mSpeakButton.setVisible(true);
-    }
+    // mSpeakButton = menu.findItem(R.id.speak);
+    // if (ttsInitialized) {
+    //   // Log.d(TAG, "enabling TTS button in onCreateOptionsMenu");
+    //   mSpeakButton.setVisible(true);
+    // }
 
     return true;
   }
@@ -541,17 +541,18 @@ public class EntryActivity extends BaseActivity
         return true;
     } else if (item.getItemId() == R.id.speak) {
         // TTS:
-        if (mEntryName != null) {
-            // Log.d(TAG, "Speaking");
-            // Toast.makeText(getBaseContext(), mEntryName, Toast.LENGTH_LONG).show();
-            mTts.speak(mEntryName, TextToSpeech.QUEUE_FLUSH, null);
-        }
+        // if (mEntryName != null) {
+        //     // Log.d(TAG, "Speaking");
+        //     // Toast.makeText(getBaseContext(), mEntryName, Toast.LENGTH_LONG).show();
+        //     mTts.speak(mEntryName, TextToSpeech.QUEUE_FLUSH, null);
+        // }
     }
     return super.onOptionsItemSelected(item);
   }
 
   // TTS:
   // Implements TextToSpeech.OnInitListener.
+  /*
   public void onInit(int status) {
       // status can be either TextToSpeech.SUCCESS or TextToSpeech.ERROR.
       if (status == TextToSpeech.SUCCESS) {
@@ -579,4 +580,5 @@ public class EntryActivity extends BaseActivity
           Log.e(TAG, "Could not initialize TextToSpeech.");
       }
   }
+  */
 }
