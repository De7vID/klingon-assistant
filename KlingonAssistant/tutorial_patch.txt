diff --git a/KlingonAssistant/AndroidManifest.xml b/KlingonAssistant/AndroidManifest.xml
index dc4ff7c..1fbbc9f 100644
--- a/KlingonAssistant/AndroidManifest.xml
+++ b/KlingonAssistant/AndroidManifest.xml
@@ -25,7 +25,7 @@
 
     <!-- Minimum Android version 2.1 (7), targeted version 4.4 (19). -->
     <!-- For TUTORIAL, minimum is version 4.0 (14). For TTS, it's 4.1 (16). -->
-    <uses-sdk android:minSdkVersion="7"
+    <uses-sdk android:minSdkVersion="16"
               android:targetSdkVersion="19"/>
     <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
     <supports-screens android:resizeable="true"
diff --git a/KlingonAssistant/project.properties b/KlingonAssistant/project.properties
index 9862e92..e44fdc0 100644
--- a/KlingonAssistant/project.properties
+++ b/KlingonAssistant/project.properties
@@ -11,7 +11,7 @@
 target=android-19
 
 # ProGuard configuration.
-proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-ka.txt
+# proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-ka.txt
 
 # Libraries used.
 android.library.reference.1=../../ActionBarSherlock/actionbarsherlock
@@ -19,5 +19,5 @@ android.library.reference.2=../../android-menudrawer/menudrawer
 android.library.reference.3=../../StandOut/library
 
 # TUTORIAL - for API 14+
-# android.library.reference.4=../../../opt/android-sdk-linux_86/extras/google/google_play_services/libproject/google-play-services_lib
-# android.library.reference.5=../../ShowcaseView/library
+android.library.reference.4=../../../opt/android-sdk-linux_86/extras/google/google_play_services/libproject/google-play-services_lib
+android.library.reference.5=../../ShowcaseView/library
diff --git a/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/BaseActivity.java b/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/BaseActivity.java
index a5e7a0e..af91e47 100644
--- a/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/BaseActivity.java
+++ b/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/BaseActivity.java
@@ -53,10 +53,10 @@ import com.actionbarsherlock.view.MenuItem;
 import com.actionbarsherlock.widget.SearchView;
 
 // TUTORIAL:
-// import com.google.android.gms.plus.PlusShare;
-// import com.google.android.gms.plus.PlusShare.Builder;
-// import com.google.android.gms.plus.model.people.Person;
-// import java.util.Arrays;
+import com.google.android.gms.plus.PlusShare;
+import com.google.android.gms.plus.PlusShare.Builder;
+import com.google.android.gms.plus.model.people.Person;
+import java.util.Arrays;
 
 
 // ABS: s/SherlockActivity/ActionBarActivity
@@ -255,7 +255,6 @@ public class BaseActivity extends SherlockActivity implements SlideMenuAdapter.M
       }
 
       if (isHoneycombOrAbove()) {
-        /* TUTORIAL
         if (KlingonAssistant.INCLUDE_TUTORIAL) {
           if (isJellyBeanOrAbove()) {
             // The Google Play Services version we are using does not work in Froyo and below.
@@ -265,7 +264,6 @@ public class BaseActivity extends SherlockActivity implements SlideMenuAdapter.M
             requestTranslationItem.setVisible(true);
           }
         }
-        */
 
         SearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);
         // ABS: SearchView searchView = (SearchView) MenuItemCompat.getActionView(menu.findItem(R.id.search));
@@ -429,7 +427,6 @@ public class BaseActivity extends SherlockActivity implements SlideMenuAdapter.M
 
     // Private method to request a translation.
     private void requestTranslation() {
-      /* TUTORIAL
       if (KlingonAssistant.INCLUDE_TUTORIAL) {
         // See: https://developers.google.com/+/mobile/android/share/prefill
         // TODO: Ideally, this should post to the "Klingon language" community under the "Requests for
@@ -453,7 +450,6 @@ public class BaseActivity extends SherlockActivity implements SlideMenuAdapter.M
                   Toast.LENGTH_LONG).show();
         }
       }
-      */
     }
 
     // Private method to launch a Facebook group.
diff --git a/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/EntryActivity.java b/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/EntryActivity.java
index e15ccff..a64a487 100644
--- a/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/EntryActivity.java
+++ b/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/EntryActivity.java
@@ -51,15 +51,15 @@ import com.actionbarsherlock.view.MenuItem;
 import com.actionbarsherlock.widget.ShareActionProvider;
 
 // TTS:
-// import android.speech.tts.TextToSpeech;
-// import java.util.Locale;
+import android.speech.tts.TextToSpeech;
+import java.util.Locale;
 
 /**
  * Displays an entry and its definition.
  */
-public class EntryActivity extends BaseActivity {
+public class EntryActivity extends BaseActivity
 // TTS:
-//     implements TextToSpeech.OnInitListener {
+    implements TextToSpeech.OnInitListener {
 
   private static final String TAG = "EntryActivity";
 
@@ -71,10 +71,10 @@ public class EntryActivity extends BaseActivity {
   private String mEntryName = null;
 
   // TTS:
-  //  The {@link TextToSpeech} used for speaking.
-  // private TextToSpeech mTts;
-  // private MenuItem mSpeakButton;
-  // private boolean ttsInitialized = false;
+  /** The {@link TextToSpeech} used for speaking. **/
+  private TextToSpeech mTts;
+  private MenuItem mSpeakButton;
+  private boolean ttsInitialized = false;
 
   @Override
   protected void onCreate(Bundle savedInstanceState) {
@@ -84,9 +84,9 @@ public class EntryActivity extends BaseActivity {
     // Initialize text-to-speech. This is an asynchronous operation.
     // The OnInitListener (second argument) is called after initialization completes.
     // Log.d(TAG, "Initialising TTS");
-    // mTts = new TextToSpeech(this,
-    //     this,  // TextToSpeech.OnInitListener
-    //     "org.tlhInganHol.android.klingonttsengine");  // Requires API 14.
+    mTts = new TextToSpeech(this,
+        this,  // TextToSpeech.OnInitListener
+        "org.tlhInganHol.android.klingonttsengine");  // Requires API 14.
 
     setDrawerContentView(R.layout.entry);
     Resources resources = getResources();
@@ -392,10 +392,10 @@ public class EntryActivity extends BaseActivity {
       // TTS:
       // Don't forget to shutdown!
       // Log.d(TAG, "Shutting down TTS");
-      // if (mTts != null) {
-      //     mTts.stop();
-      //     mTts.shutdown();
-      // }
+      if (mTts != null) {
+          mTts.stop();
+          mTts.shutdown();
+      }
       super.onDestroy();
   }
 
@@ -423,11 +423,11 @@ public class EntryActivity extends BaseActivity {
     // TTS:
     // The button is disabled in the layout.
     // It will be enabled upon initialization of the TTS engine.
-    // mSpeakButton = menu.findItem(R.id.speak);
-    // if (ttsInitialized) {
-    //   // Log.d(TAG, "enabling TTS button in onCreateOptionsMenu");
-    //   mSpeakButton.setVisible(true);
-    // }
+    mSpeakButton = menu.findItem(R.id.speak);
+    if (ttsInitialized) {
+      // Log.d(TAG, "enabling TTS button in onCreateOptionsMenu");
+      mSpeakButton.setVisible(true);
+    }
 
     return true;
   }
@@ -518,18 +518,17 @@ public class EntryActivity extends BaseActivity {
         return true;
     } else if (item.getItemId() == R.id.speak) {
         // TTS:
-        // if (mEntryName != null) {
-        //     // Log.d(TAG, "Speaking");
-        //     // Toast.makeText(getBaseContext(), mEntryName, Toast.LENGTH_LONG).show();
-        //     mTts.speak(mEntryName, TextToSpeech.QUEUE_FLUSH, null);
-        // }
+        if (mEntryName != null) {
+            // Log.d(TAG, "Speaking");
+            // Toast.makeText(getBaseContext(), mEntryName, Toast.LENGTH_LONG).show();
+            mTts.speak(mEntryName, TextToSpeech.QUEUE_FLUSH, null);
+        }
     }
     return super.onOptionsItemSelected(item);
   }
 
   // TTS:
   // Implements TextToSpeech.OnInitListener.
-  /*
   public void onInit(int status) {
       // status can be either TextToSpeech.SUCCESS or TextToSpeech.ERROR.
       if (status == TextToSpeech.SUCCESS) {
@@ -557,5 +556,4 @@ public class EntryActivity extends BaseActivity {
           Log.e(TAG, "Could not initialize TextToSpeech.");
       }
   }
-  */
 }
diff --git a/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/KlingonAssistant.java b/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/KlingonAssistant.java
index 2219099..05a28bf 100644
--- a/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/KlingonAssistant.java
+++ b/KlingonAssistant/src/org/tlhInganHol/android/klingonassistant/KlingonAssistant.java
@@ -44,10 +44,10 @@ import wei.mark.standout.StandOutWindow;
 import com.actionbarsherlock.view.MenuItem;
 
 // TUTORIAL:
-// import com.actionbarsherlock.view.Menu;
-// import com.espian.showcaseview.ShowcaseView;
-// import com.espian.showcaseview.targets.ActionItemTarget;
-// import com.espian.showcaseview.targets.ActionViewTarget;
+import com.actionbarsherlock.view.Menu;
+import com.espian.showcaseview.ShowcaseView;
+import com.espian.showcaseview.targets.ActionItemTarget;
+import com.espian.showcaseview.targets.ActionViewTarget;
 
 /**
  * The main activity for the dictionary. Displays search results triggered by the search dialog and
@@ -57,7 +57,7 @@ public class KlingonAssistant extends BaseActivity {
   private static final String TAG = "KlingonAssistant";
 
   // Whether to include the tutorial or not. If false, the code should be stripped out of the binary.
-  public static final boolean INCLUDE_TUTORIAL = false;
+  public static final boolean INCLUDE_TUTORIAL = true;
 
   // Preference key for whether to show help.
   public static final String  KEY_SHOW_HELP                    = "show_help";
@@ -91,7 +91,6 @@ public class KlingonAssistant extends BaseActivity {
   }
 
   private void setupTutorial() {
-    /* TUTORIAL
     if (INCLUDE_TUTORIAL) {
       // ShowcaseView for the initial tutorial.
       ShowcaseView.ConfigOptions mShowcaseViewOptions = new ShowcaseView.ConfigOptions();
@@ -162,7 +161,6 @@ public class KlingonAssistant extends BaseActivity {
           }
       });
     }
-    */
   }
 
   @Override
